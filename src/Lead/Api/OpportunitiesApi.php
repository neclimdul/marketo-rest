<?php
/**
 * OpportunitiesApi
 *
 * @category Class
 * @package  NecLimDul\MarketoRest\Lead
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Marketo Rest API
 *
 * Marketo Rest API
 *
 * OpenAPI spec version: 1.0
 * Contact: developerfeedback@marketo.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.26
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace NecLimDul\MarketoRest\Lead\Api;

use GuzzleHttp\Client;
use GuzzleHttp\ClientInterface;
use GuzzleHttp\Exception\RequestException;
use GuzzleHttp\Psr7\MultipartStream;
use GuzzleHttp\Psr7\Query;
use GuzzleHttp\Psr7\Request;
use GuzzleHttp\RequestOptions;
use Psr\Http\Message\ResponseInterface;
use NecLimDul\MarketoRest\Lead\ApiException;
use NecLimDul\MarketoRest\Lead\Configuration;
use NecLimDul\MarketoRest\Lead\HeaderSelector;
use NecLimDul\MarketoRest\Lead\ObjectSerializer;

/**
 * OpportunitiesApi Class Doc Comment
 *
 * @category Class
 * @package  NecLimDul\MarketoRest\Lead
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class OpportunitiesApi
{

    /**
     * @var ClientInterface
     */
    protected $client;

    /**
     * @var Configuration
     */
    protected $config;

    /**
     * @var HeaderSelector
     */
    protected $headerSelector;

    /**
     * @var int Host index
     */
    protected $hostIndex;

    /**
     * @param ClientInterface|null $client
     * @param Configuration|null   $config
     * @param HeaderSelector|null  $selector
     * @param int                  $hostIndex (Optional) host index to select the list of hosts if defined in the OpenAPI spec
     */
    public function __construct(
        ClientInterface $client = null,
        Configuration $config = null,
        HeaderSelector $selector = null,
        $hostIndex = 0
    ) {
        $this->client = $client ?: new Client();
        $this->config = $config ?: new Configuration();
        $this->headerSelector = $selector ?: new HeaderSelector();
        $this->hostIndex = $hostIndex;
    }

    /**
     * Set the host index
     *
     * @param int $hostIndex Host index (required)
     */
    public function setHostIndex($hostIndex)
    {
        $this->hostIndex = $hostIndex;
    }

    /**
     * Get the host index
     *
     * @return int Host index
     */
    public function getHostIndex()
    {
        return $this->hostIndex;
    }

    /**
     * @return Configuration
     */
    public function getConfig()
    {
        return $this->config;
    }

    /**
     * Exception handler for deleteOpportunitiesUsingPOST.
     *
     * @param \NecLimDul\MarketoRest\Lead\ApiException $e Unprocessed exception.
     *
     * @return \NecLimDul\MarketoRest\Lead\ApiException Processed exception.
     */
    protected function deleteOpportunitiesUsingPOSTHandleException(ApiException $e)
    {
        switch ($e->getCode()) {
            case 200:
                $e->setResponseObject(
                    $this->deserializeResponseBody(
                        $e->getResponseBody(),
                        '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject',
                        $e->getResponseHeaders()
                    )
                );
                break;
        }
        return $e;
    }

    /**
     * Delete Opportunities
     *
     * @param  \NecLimDul\MarketoRest\Lead\Model\DeleteCustomObjectRequest $delete_custom_object_request deleteCustomObjectRequest (optional)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject
     */
    public function deleteOpportunitiesUsingPOST($delete_custom_object_request = null)
    {
        list($response) = $this->deleteOpportunitiesUsingPOSTWithHttpInfo($delete_custom_object_request);
        return $response;
    }

    /**
     * Delete Opportunities
     *
     * @param  \NecLimDul\MarketoRest\Lead\Model\DeleteCustomObjectRequest $delete_custom_object_request deleteCustomObjectRequest (optional)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject, HTTP status code, HTTP response headers (array of strings)
     */
    public function deleteOpportunitiesUsingPOSTWithHttpInfo($delete_custom_object_request = null)
    {
        $request = $this->deleteOpportunitiesUsingPOSTRequest($delete_custom_object_request);
        try {
            $response = $this->makeRequest($request);
            return $this->responseToReturn($response, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject');
        } catch (ApiException $e) {
            throw $this->deleteOpportunitiesUsingPOSTHandleException($e);
        }
    }

    /**
     * Delete Opportunities
     *
     * @param  \NecLimDul\MarketoRest\Lead\Model\DeleteCustomObjectRequest $delete_custom_object_request deleteCustomObjectRequest (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function deleteOpportunitiesUsingPOSTAsync($delete_custom_object_request = null)
    {
        return $this->deleteOpportunitiesUsingPOSTAsyncWithHttpInfo($delete_custom_object_request)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Delete Opportunities
     *
     * @param  \NecLimDul\MarketoRest\Lead\Model\DeleteCustomObjectRequest $delete_custom_object_request deleteCustomObjectRequest (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function deleteOpportunitiesUsingPOSTAsyncWithHttpInfo($delete_custom_object_request = null)
    {
        $request = $this->deleteOpportunitiesUsingPOSTRequest($delete_custom_object_request);
        return $this->makeAsyncRequest($request, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject', [$this, 'deleteOpportunitiesUsingPOSTHandleException']);
    }

    /**
     * Create request for operation 'deleteOpportunitiesUsingPOST'
     *
     * @param  \NecLimDul\MarketoRest\Lead\Model\DeleteCustomObjectRequest $delete_custom_object_request deleteCustomObjectRequest (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function deleteOpportunitiesUsingPOSTRequest($delete_custom_object_request = null)
    {

        $resourcePath = '/rest/v1/opportunities/delete.json';
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $headers = $this->headerSelector->selectHeaders(
            ['application/json'],
            ['application/json']
        );
        // for model (json/xml)
        if (!empty($delete_custom_object_request)) {
            $httpBody = ObjectSerializer::toBodyValue($delete_custom_object_request, $headers['Content-Type'] === 'application/json');
        }


        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = Query::build($queryParams);
        return new Request(
            'POST',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Exception handler for deleteOpportunityRolesUsingPOST.
     *
     * @param \NecLimDul\MarketoRest\Lead\ApiException $e Unprocessed exception.
     *
     * @return \NecLimDul\MarketoRest\Lead\ApiException Processed exception.
     */
    protected function deleteOpportunityRolesUsingPOSTHandleException(ApiException $e)
    {
        switch ($e->getCode()) {
            case 200:
                $e->setResponseObject(
                    $this->deserializeResponseBody(
                        $e->getResponseBody(),
                        '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject',
                        $e->getResponseHeaders()
                    )
                );
                break;
        }
        return $e;
    }

    /**
     * Delete Opportunity Roles
     *
     * @param  \NecLimDul\MarketoRest\Lead\Model\DeleteCustomObjectRequest $delete_custom_object_request deleteCustomObjectRequest (optional)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject
     */
    public function deleteOpportunityRolesUsingPOST($delete_custom_object_request = null)
    {
        list($response) = $this->deleteOpportunityRolesUsingPOSTWithHttpInfo($delete_custom_object_request);
        return $response;
    }

    /**
     * Delete Opportunity Roles
     *
     * @param  \NecLimDul\MarketoRest\Lead\Model\DeleteCustomObjectRequest $delete_custom_object_request deleteCustomObjectRequest (optional)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject, HTTP status code, HTTP response headers (array of strings)
     */
    public function deleteOpportunityRolesUsingPOSTWithHttpInfo($delete_custom_object_request = null)
    {
        $request = $this->deleteOpportunityRolesUsingPOSTRequest($delete_custom_object_request);
        try {
            $response = $this->makeRequest($request);
            return $this->responseToReturn($response, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject');
        } catch (ApiException $e) {
            throw $this->deleteOpportunityRolesUsingPOSTHandleException($e);
        }
    }

    /**
     * Delete Opportunity Roles
     *
     * @param  \NecLimDul\MarketoRest\Lead\Model\DeleteCustomObjectRequest $delete_custom_object_request deleteCustomObjectRequest (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function deleteOpportunityRolesUsingPOSTAsync($delete_custom_object_request = null)
    {
        return $this->deleteOpportunityRolesUsingPOSTAsyncWithHttpInfo($delete_custom_object_request)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Delete Opportunity Roles
     *
     * @param  \NecLimDul\MarketoRest\Lead\Model\DeleteCustomObjectRequest $delete_custom_object_request deleteCustomObjectRequest (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function deleteOpportunityRolesUsingPOSTAsyncWithHttpInfo($delete_custom_object_request = null)
    {
        $request = $this->deleteOpportunityRolesUsingPOSTRequest($delete_custom_object_request);
        return $this->makeAsyncRequest($request, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject', [$this, 'deleteOpportunityRolesUsingPOSTHandleException']);
    }

    /**
     * Create request for operation 'deleteOpportunityRolesUsingPOST'
     *
     * @param  \NecLimDul\MarketoRest\Lead\Model\DeleteCustomObjectRequest $delete_custom_object_request deleteCustomObjectRequest (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function deleteOpportunityRolesUsingPOSTRequest($delete_custom_object_request = null)
    {

        $resourcePath = '/rest/v1/opportunities/roles/delete.json';
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $headers = $this->headerSelector->selectHeaders(
            ['application/json'],
            ['application/json']
        );
        // for model (json/xml)
        if (!empty($delete_custom_object_request)) {
            $httpBody = ObjectSerializer::toBodyValue($delete_custom_object_request, $headers['Content-Type'] === 'application/json');
        }


        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = Query::build($queryParams);
        return new Request(
            'POST',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Exception handler for describeOpportunityRoleUsingGET.
     *
     * @param \NecLimDul\MarketoRest\Lead\ApiException $e Unprocessed exception.
     *
     * @return \NecLimDul\MarketoRest\Lead\ApiException Processed exception.
     */
    protected function describeOpportunityRoleUsingGETHandleException(ApiException $e)
    {
        switch ($e->getCode()) {
            case 200:
                $e->setResponseObject(
                    $this->deserializeResponseBody(
                        $e->getResponseBody(),
                        '\NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectMetaData',
                        $e->getResponseHeaders()
                    )
                );
                break;
        }
        return $e;
    }

    /**
     * Describe Opportunity Role
     *
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectMetaData
     */
    public function describeOpportunityRoleUsingGET()
    {
        list($response) = $this->describeOpportunityRoleUsingGETWithHttpInfo();
        return $response;
    }

    /**
     * Describe Opportunity Role
     *
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectMetaData, HTTP status code, HTTP response headers (array of strings)
     */
    public function describeOpportunityRoleUsingGETWithHttpInfo()
    {
        $request = $this->describeOpportunityRoleUsingGETRequest();
        try {
            $response = $this->makeRequest($request);
            return $this->responseToReturn($response, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectMetaData');
        } catch (ApiException $e) {
            throw $this->describeOpportunityRoleUsingGETHandleException($e);
        }
    }

    /**
     * Describe Opportunity Role
     *
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function describeOpportunityRoleUsingGETAsync()
    {
        return $this->describeOpportunityRoleUsingGETAsyncWithHttpInfo()
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Describe Opportunity Role
     *
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function describeOpportunityRoleUsingGETAsyncWithHttpInfo()
    {
        $request = $this->describeOpportunityRoleUsingGETRequest();
        return $this->makeAsyncRequest($request, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectMetaData', [$this, 'describeOpportunityRoleUsingGETHandleException']);
    }

    /**
     * Create request for operation 'describeOpportunityRoleUsingGET'
     *
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function describeOpportunityRoleUsingGETRequest()
    {

        $resourcePath = '/rest/v1/opportunities/roles/describe.json';
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $headers = $this->headerSelector->selectHeaders(
            ['application/json'],
            ['application/json']
        );


        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = Query::build($queryParams);
        return new Request(
            'GET',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Exception handler for describeUsingGET4.
     *
     * @param \NecLimDul\MarketoRest\Lead\ApiException $e Unprocessed exception.
     *
     * @return \NecLimDul\MarketoRest\Lead\ApiException Processed exception.
     */
    protected function describeUsingGET4HandleException(ApiException $e)
    {
        switch ($e->getCode()) {
            case 200:
                $e->setResponseObject(
                    $this->deserializeResponseBody(
                        $e->getResponseBody(),
                        '\NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectMetaData',
                        $e->getResponseHeaders()
                    )
                );
                break;
        }
        return $e;
    }

    /**
     * Describe Opportunity
     *
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectMetaData
     */
    public function describeUsingGET4()
    {
        list($response) = $this->describeUsingGET4WithHttpInfo();
        return $response;
    }

    /**
     * Describe Opportunity
     *
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectMetaData, HTTP status code, HTTP response headers (array of strings)
     */
    public function describeUsingGET4WithHttpInfo()
    {
        $request = $this->describeUsingGET4Request();
        try {
            $response = $this->makeRequest($request);
            return $this->responseToReturn($response, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectMetaData');
        } catch (ApiException $e) {
            throw $this->describeUsingGET4HandleException($e);
        }
    }

    /**
     * Describe Opportunity
     *
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function describeUsingGET4Async()
    {
        return $this->describeUsingGET4AsyncWithHttpInfo()
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Describe Opportunity
     *
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function describeUsingGET4AsyncWithHttpInfo()
    {
        $request = $this->describeUsingGET4Request();
        return $this->makeAsyncRequest($request, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectMetaData', [$this, 'describeUsingGET4HandleException']);
    }

    /**
     * Create request for operation 'describeUsingGET4'
     *
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function describeUsingGET4Request()
    {

        $resourcePath = '/rest/v1/opportunities/describe.json';
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $headers = $this->headerSelector->selectHeaders(
            ['application/json'],
            ['application/json']
        );


        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = Query::build($queryParams);
        return new Request(
            'GET',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Exception handler for getOpportunitiesUsingGET.
     *
     * @param \NecLimDul\MarketoRest\Lead\ApiException $e Unprocessed exception.
     *
     * @return \NecLimDul\MarketoRest\Lead\ApiException Processed exception.
     */
    protected function getOpportunitiesUsingGETHandleException(ApiException $e)
    {
        switch ($e->getCode()) {
            case 200:
                $e->setResponseObject(
                    $this->deserializeResponseBody(
                        $e->getResponseBody(),
                        '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject',
                        $e->getResponseHeaders()
                    )
                );
                break;
        }
        return $e;
    }

    /**
     * Get Opportunities
     *
     * @param  string $filter_type Opportunities field to filter on (required)
     * @param  string[] $filter_values Comma-separated list of values to match against (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\LookupCustomObjectRequest $custom_object_lookup_request customObjectLookupRequest (optional)
     * @param  string[] $fields Comma-separated list of fields to include in the response (optional)
     * @param  int $batch_size Maximum number of records to return in the response.  Max and default is 300 (optional)
     * @param  string $next_page_token Paging token returned from a previous response (optional)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject
     */
    public function getOpportunitiesUsingGET($filter_type, $filter_values, $custom_object_lookup_request = null, $fields = null, $batch_size = null, $next_page_token = null)
    {
        list($response) = $this->getOpportunitiesUsingGETWithHttpInfo($filter_type, $filter_values, $custom_object_lookup_request, $fields, $batch_size, $next_page_token);
        return $response;
    }

    /**
     * Get Opportunities
     *
     * @param  string $filter_type Opportunities field to filter on (required)
     * @param  string[] $filter_values Comma-separated list of values to match against (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\LookupCustomObjectRequest $custom_object_lookup_request customObjectLookupRequest (optional)
     * @param  string[] $fields Comma-separated list of fields to include in the response (optional)
     * @param  int $batch_size Maximum number of records to return in the response.  Max and default is 300 (optional)
     * @param  string $next_page_token Paging token returned from a previous response (optional)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject, HTTP status code, HTTP response headers (array of strings)
     */
    public function getOpportunitiesUsingGETWithHttpInfo($filter_type, $filter_values, $custom_object_lookup_request = null, $fields = null, $batch_size = null, $next_page_token = null)
    {
        $request = $this->getOpportunitiesUsingGETRequest($filter_type, $filter_values, $custom_object_lookup_request, $fields, $batch_size, $next_page_token);
        try {
            $response = $this->makeRequest($request);
            return $this->responseToReturn($response, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject');
        } catch (ApiException $e) {
            throw $this->getOpportunitiesUsingGETHandleException($e);
        }
    }

    /**
     * Get Opportunities
     *
     * @param  string $filter_type Opportunities field to filter on (required)
     * @param  string[] $filter_values Comma-separated list of values to match against (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\LookupCustomObjectRequest $custom_object_lookup_request customObjectLookupRequest (optional)
     * @param  string[] $fields Comma-separated list of fields to include in the response (optional)
     * @param  int $batch_size Maximum number of records to return in the response.  Max and default is 300 (optional)
     * @param  string $next_page_token Paging token returned from a previous response (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getOpportunitiesUsingGETAsync($filter_type, $filter_values, $custom_object_lookup_request = null, $fields = null, $batch_size = null, $next_page_token = null)
    {
        return $this->getOpportunitiesUsingGETAsyncWithHttpInfo($filter_type, $filter_values, $custom_object_lookup_request, $fields, $batch_size, $next_page_token)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Get Opportunities
     *
     * @param  string $filter_type Opportunities field to filter on (required)
     * @param  string[] $filter_values Comma-separated list of values to match against (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\LookupCustomObjectRequest $custom_object_lookup_request customObjectLookupRequest (optional)
     * @param  string[] $fields Comma-separated list of fields to include in the response (optional)
     * @param  int $batch_size Maximum number of records to return in the response.  Max and default is 300 (optional)
     * @param  string $next_page_token Paging token returned from a previous response (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getOpportunitiesUsingGETAsyncWithHttpInfo($filter_type, $filter_values, $custom_object_lookup_request = null, $fields = null, $batch_size = null, $next_page_token = null)
    {
        $request = $this->getOpportunitiesUsingGETRequest($filter_type, $filter_values, $custom_object_lookup_request, $fields, $batch_size, $next_page_token);
        return $this->makeAsyncRequest($request, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject', [$this, 'getOpportunitiesUsingGETHandleException']);
    }

    /**
     * Create request for operation 'getOpportunitiesUsingGET'
     *
     * @param  string $filter_type Opportunities field to filter on (required)
     * @param  string[] $filter_values Comma-separated list of values to match against (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\LookupCustomObjectRequest $custom_object_lookup_request customObjectLookupRequest (optional)
     * @param  string[] $fields Comma-separated list of fields to include in the response (optional)
     * @param  int $batch_size Maximum number of records to return in the response.  Max and default is 300 (optional)
     * @param  string $next_page_token Paging token returned from a previous response (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function getOpportunitiesUsingGETRequest($filter_type, $filter_values, $custom_object_lookup_request = null, $fields = null, $batch_size = null, $next_page_token = null)
    {
        // Verify the required parameter 'filter_type' is set.
        if (!isset($filter_type)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $filter_type when calling getOpportunitiesUsingGET'
            );
        }
        // Verify the required parameter 'filter_values' is set.
        if (!isset($filter_values) || (is_array($filter_values) && empty($filter_values))) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $filter_values when calling getOpportunitiesUsingGET'
            );
        }

        $resourcePath = '/rest/v1/opportunities.json';
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';

        // Query parameters.
        $queryParams['filterType'] = ObjectSerializer::toQueryValue($filter_type);
        $queryParams['filterValues'] = ObjectSerializer::toQueryValue($filter_values);
        $queryParams['fields'] = ObjectSerializer::toQueryValue($fields);
        $queryParams['batchSize'] = ObjectSerializer::toQueryValue($batch_size);
        $queryParams['nextPageToken'] = ObjectSerializer::toQueryValue($next_page_token);
        // Remove any null (optional values).
        $queryParams = array_filter($queryParams, function($v) { return $v !== null; });
        $headers = $this->headerSelector->selectHeaders(
            ['application/json'],
            ['application/json']
        );
        // for model (json/xml)
        if (!empty($custom_object_lookup_request)) {
            $httpBody = ObjectSerializer::toBodyValue($custom_object_lookup_request, $headers['Content-Type'] === 'application/json');
        }


        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = Query::build($queryParams);
        return new Request(
            'GET',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Exception handler for getOpportunityFieldByNameUsingGET.
     *
     * @param \NecLimDul\MarketoRest\Lead\ApiException $e Unprocessed exception.
     *
     * @return \NecLimDul\MarketoRest\Lead\ApiException Processed exception.
     */
    protected function getOpportunityFieldByNameUsingGETHandleException(ApiException $e)
    {
        switch ($e->getCode()) {
            case 200:
                $e->setResponseObject(
                    $this->deserializeResponseBody(
                        $e->getResponseBody(),
                        '\NecLimDul\MarketoRest\Lead\Model\ResponseOfLeadField',
                        $e->getResponseHeaders()
                    )
                );
                break;
        }
        return $e;
    }

    /**
     * Get Opportunity Field by Name
     *
     * @param  string $field_api_name The API name of opportunity field (required)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \NecLimDul\MarketoRest\Lead\Model\ResponseOfLeadField
     */
    public function getOpportunityFieldByNameUsingGET($field_api_name)
    {
        list($response) = $this->getOpportunityFieldByNameUsingGETWithHttpInfo($field_api_name);
        return $response;
    }

    /**
     * Get Opportunity Field by Name
     *
     * @param  string $field_api_name The API name of opportunity field (required)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \NecLimDul\MarketoRest\Lead\Model\ResponseOfLeadField, HTTP status code, HTTP response headers (array of strings)
     */
    public function getOpportunityFieldByNameUsingGETWithHttpInfo($field_api_name)
    {
        $request = $this->getOpportunityFieldByNameUsingGETRequest($field_api_name);
        try {
            $response = $this->makeRequest($request);
            return $this->responseToReturn($response, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfLeadField');
        } catch (ApiException $e) {
            throw $this->getOpportunityFieldByNameUsingGETHandleException($e);
        }
    }

    /**
     * Get Opportunity Field by Name
     *
     * @param  string $field_api_name The API name of opportunity field (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getOpportunityFieldByNameUsingGETAsync($field_api_name)
    {
        return $this->getOpportunityFieldByNameUsingGETAsyncWithHttpInfo($field_api_name)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Get Opportunity Field by Name
     *
     * @param  string $field_api_name The API name of opportunity field (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getOpportunityFieldByNameUsingGETAsyncWithHttpInfo($field_api_name)
    {
        $request = $this->getOpportunityFieldByNameUsingGETRequest($field_api_name);
        return $this->makeAsyncRequest($request, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfLeadField', [$this, 'getOpportunityFieldByNameUsingGETHandleException']);
    }

    /**
     * Create request for operation 'getOpportunityFieldByNameUsingGET'
     *
     * @param  string $field_api_name The API name of opportunity field (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function getOpportunityFieldByNameUsingGETRequest($field_api_name)
    {
        // Verify the required parameter 'field_api_name' is set.
        if (!isset($field_api_name)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $field_api_name when calling getOpportunityFieldByNameUsingGET'
            );
        }

        $resourcePath = '/rest/v1/opportunities/schema/fields/{fieldApiName}.json';
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';

        // Path parameters.
        $resourcePath = str_replace(
            '{' . 'fieldApiName' . '}',
            ObjectSerializer::toPathValue($field_api_name),
            $resourcePath
        );
        $headers = $this->headerSelector->selectHeaders(
            ['application/json'],
            ['application/json']
        );


        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = Query::build($queryParams);
        return new Request(
            'GET',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Exception handler for getOpportunityFieldsUsingGET.
     *
     * @param \NecLimDul\MarketoRest\Lead\ApiException $e Unprocessed exception.
     *
     * @return \NecLimDul\MarketoRest\Lead\ApiException Processed exception.
     */
    protected function getOpportunityFieldsUsingGETHandleException(ApiException $e)
    {
        switch ($e->getCode()) {
            case 200:
                $e->setResponseObject(
                    $this->deserializeResponseBody(
                        $e->getResponseBody(),
                        '\NecLimDul\MarketoRest\Lead\Model\ResponseOfLeadField',
                        $e->getResponseHeaders()
                    )
                );
                break;
        }
        return $e;
    }

    /**
     * Get Opportunity Fields
     *
     * @param  int $batch_size The batch size to return. The max and default value is 300. (optional)
     * @param  string $next_page_token A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter. See Paging Tokens for more info. (optional)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \NecLimDul\MarketoRest\Lead\Model\ResponseOfLeadField
     */
    public function getOpportunityFieldsUsingGET($batch_size = null, $next_page_token = null)
    {
        list($response) = $this->getOpportunityFieldsUsingGETWithHttpInfo($batch_size, $next_page_token);
        return $response;
    }

    /**
     * Get Opportunity Fields
     *
     * @param  int $batch_size The batch size to return. The max and default value is 300. (optional)
     * @param  string $next_page_token A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter. See Paging Tokens for more info. (optional)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \NecLimDul\MarketoRest\Lead\Model\ResponseOfLeadField, HTTP status code, HTTP response headers (array of strings)
     */
    public function getOpportunityFieldsUsingGETWithHttpInfo($batch_size = null, $next_page_token = null)
    {
        $request = $this->getOpportunityFieldsUsingGETRequest($batch_size, $next_page_token);
        try {
            $response = $this->makeRequest($request);
            return $this->responseToReturn($response, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfLeadField');
        } catch (ApiException $e) {
            throw $this->getOpportunityFieldsUsingGETHandleException($e);
        }
    }

    /**
     * Get Opportunity Fields
     *
     * @param  int $batch_size The batch size to return. The max and default value is 300. (optional)
     * @param  string $next_page_token A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter. See Paging Tokens for more info. (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getOpportunityFieldsUsingGETAsync($batch_size = null, $next_page_token = null)
    {
        return $this->getOpportunityFieldsUsingGETAsyncWithHttpInfo($batch_size, $next_page_token)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Get Opportunity Fields
     *
     * @param  int $batch_size The batch size to return. The max and default value is 300. (optional)
     * @param  string $next_page_token A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter. See Paging Tokens for more info. (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getOpportunityFieldsUsingGETAsyncWithHttpInfo($batch_size = null, $next_page_token = null)
    {
        $request = $this->getOpportunityFieldsUsingGETRequest($batch_size, $next_page_token);
        return $this->makeAsyncRequest($request, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfLeadField', [$this, 'getOpportunityFieldsUsingGETHandleException']);
    }

    /**
     * Create request for operation 'getOpportunityFieldsUsingGET'
     *
     * @param  int $batch_size The batch size to return. The max and default value is 300. (optional)
     * @param  string $next_page_token A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter. See Paging Tokens for more info. (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function getOpportunityFieldsUsingGETRequest($batch_size = null, $next_page_token = null)
    {

        $resourcePath = '/rest/v1/opportunities/schema/fields.json';
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';

        // Query parameters.
        $queryParams['batchSize'] = ObjectSerializer::toQueryValue($batch_size);
        $queryParams['nextPageToken'] = ObjectSerializer::toQueryValue($next_page_token);
        // Remove any null (optional values).
        $queryParams = array_filter($queryParams, function($v) { return $v !== null; });
        $headers = $this->headerSelector->selectHeaders(
            ['application/json'],
            ['application/json']
        );


        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = Query::build($queryParams);
        return new Request(
            'GET',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Exception handler for getOpportunityRolesUsingGET.
     *
     * @param \NecLimDul\MarketoRest\Lead\ApiException $e Unprocessed exception.
     *
     * @return \NecLimDul\MarketoRest\Lead\ApiException Processed exception.
     */
    protected function getOpportunityRolesUsingGETHandleException(ApiException $e)
    {
        switch ($e->getCode()) {
            case 200:
                $e->setResponseObject(
                    $this->deserializeResponseBody(
                        $e->getResponseBody(),
                        '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject',
                        $e->getResponseHeaders()
                    )
                );
                break;
        }
        return $e;
    }

    /**
     * Get Opportunity Roles
     *
     * @param  string $filter_type The role field to filter on.  Searchable fields can be retrieved with the Describe Opportunity call. (required)
     * @param  string[] $filter_values Comma-separated list of field values to return records for (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\LookupCustomObjectRequest $custom_object_lookup_request Optional JSON request for retrieving opportunity roles with compound keys (optional)
     * @param  string[] $fields Comma-separated list of fields to include in the response (optional)
     * @param  int $batch_size Maximum number of records to return in the response.  Max and default is 300 (optional)
     * @param  string $next_page_token Paging token returned from a previous response (optional)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject
     */
    public function getOpportunityRolesUsingGET($filter_type, $filter_values, $custom_object_lookup_request = null, $fields = null, $batch_size = null, $next_page_token = null)
    {
        list($response) = $this->getOpportunityRolesUsingGETWithHttpInfo($filter_type, $filter_values, $custom_object_lookup_request, $fields, $batch_size, $next_page_token);
        return $response;
    }

    /**
     * Get Opportunity Roles
     *
     * @param  string $filter_type The role field to filter on.  Searchable fields can be retrieved with the Describe Opportunity call. (required)
     * @param  string[] $filter_values Comma-separated list of field values to return records for (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\LookupCustomObjectRequest $custom_object_lookup_request Optional JSON request for retrieving opportunity roles with compound keys (optional)
     * @param  string[] $fields Comma-separated list of fields to include in the response (optional)
     * @param  int $batch_size Maximum number of records to return in the response.  Max and default is 300 (optional)
     * @param  string $next_page_token Paging token returned from a previous response (optional)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject, HTTP status code, HTTP response headers (array of strings)
     */
    public function getOpportunityRolesUsingGETWithHttpInfo($filter_type, $filter_values, $custom_object_lookup_request = null, $fields = null, $batch_size = null, $next_page_token = null)
    {
        $request = $this->getOpportunityRolesUsingGETRequest($filter_type, $filter_values, $custom_object_lookup_request, $fields, $batch_size, $next_page_token);
        try {
            $response = $this->makeRequest($request);
            return $this->responseToReturn($response, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject');
        } catch (ApiException $e) {
            throw $this->getOpportunityRolesUsingGETHandleException($e);
        }
    }

    /**
     * Get Opportunity Roles
     *
     * @param  string $filter_type The role field to filter on.  Searchable fields can be retrieved with the Describe Opportunity call. (required)
     * @param  string[] $filter_values Comma-separated list of field values to return records for (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\LookupCustomObjectRequest $custom_object_lookup_request Optional JSON request for retrieving opportunity roles with compound keys (optional)
     * @param  string[] $fields Comma-separated list of fields to include in the response (optional)
     * @param  int $batch_size Maximum number of records to return in the response.  Max and default is 300 (optional)
     * @param  string $next_page_token Paging token returned from a previous response (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getOpportunityRolesUsingGETAsync($filter_type, $filter_values, $custom_object_lookup_request = null, $fields = null, $batch_size = null, $next_page_token = null)
    {
        return $this->getOpportunityRolesUsingGETAsyncWithHttpInfo($filter_type, $filter_values, $custom_object_lookup_request, $fields, $batch_size, $next_page_token)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Get Opportunity Roles
     *
     * @param  string $filter_type The role field to filter on.  Searchable fields can be retrieved with the Describe Opportunity call. (required)
     * @param  string[] $filter_values Comma-separated list of field values to return records for (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\LookupCustomObjectRequest $custom_object_lookup_request Optional JSON request for retrieving opportunity roles with compound keys (optional)
     * @param  string[] $fields Comma-separated list of fields to include in the response (optional)
     * @param  int $batch_size Maximum number of records to return in the response.  Max and default is 300 (optional)
     * @param  string $next_page_token Paging token returned from a previous response (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getOpportunityRolesUsingGETAsyncWithHttpInfo($filter_type, $filter_values, $custom_object_lookup_request = null, $fields = null, $batch_size = null, $next_page_token = null)
    {
        $request = $this->getOpportunityRolesUsingGETRequest($filter_type, $filter_values, $custom_object_lookup_request, $fields, $batch_size, $next_page_token);
        return $this->makeAsyncRequest($request, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject', [$this, 'getOpportunityRolesUsingGETHandleException']);
    }

    /**
     * Create request for operation 'getOpportunityRolesUsingGET'
     *
     * @param  string $filter_type The role field to filter on.  Searchable fields can be retrieved with the Describe Opportunity call. (required)
     * @param  string[] $filter_values Comma-separated list of field values to return records for (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\LookupCustomObjectRequest $custom_object_lookup_request Optional JSON request for retrieving opportunity roles with compound keys (optional)
     * @param  string[] $fields Comma-separated list of fields to include in the response (optional)
     * @param  int $batch_size Maximum number of records to return in the response.  Max and default is 300 (optional)
     * @param  string $next_page_token Paging token returned from a previous response (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function getOpportunityRolesUsingGETRequest($filter_type, $filter_values, $custom_object_lookup_request = null, $fields = null, $batch_size = null, $next_page_token = null)
    {
        // Verify the required parameter 'filter_type' is set.
        if (!isset($filter_type)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $filter_type when calling getOpportunityRolesUsingGET'
            );
        }
        // Verify the required parameter 'filter_values' is set.
        if (!isset($filter_values) || (is_array($filter_values) && empty($filter_values))) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $filter_values when calling getOpportunityRolesUsingGET'
            );
        }

        $resourcePath = '/rest/v1/opportunities/roles.json';
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';

        // Query parameters.
        $queryParams['filterType'] = ObjectSerializer::toQueryValue($filter_type);
        $queryParams['filterValues'] = ObjectSerializer::toQueryValue($filter_values);
        $queryParams['fields'] = ObjectSerializer::toQueryValue($fields);
        $queryParams['batchSize'] = ObjectSerializer::toQueryValue($batch_size);
        $queryParams['nextPageToken'] = ObjectSerializer::toQueryValue($next_page_token);
        // Remove any null (optional values).
        $queryParams = array_filter($queryParams, function($v) { return $v !== null; });
        $headers = $this->headerSelector->selectHeaders(
            ['application/json'],
            ['application/json']
        );
        // for model (json/xml)
        if (!empty($custom_object_lookup_request)) {
            $httpBody = ObjectSerializer::toBodyValue($custom_object_lookup_request, $headers['Content-Type'] === 'application/json');
        }


        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = Query::build($queryParams);
        return new Request(
            'GET',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Exception handler for syncOpportunitiesUsingPOST.
     *
     * @param \NecLimDul\MarketoRest\Lead\ApiException $e Unprocessed exception.
     *
     * @return \NecLimDul\MarketoRest\Lead\ApiException Processed exception.
     */
    protected function syncOpportunitiesUsingPOSTHandleException(ApiException $e)
    {
        switch ($e->getCode()) {
            case 200:
                $e->setResponseObject(
                    $this->deserializeResponseBody(
                        $e->getResponseBody(),
                        '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject',
                        $e->getResponseHeaders()
                    )
                );
                break;
        }
        return $e;
    }

    /**
     * Sync Opportunities
     *
     * @param  \NecLimDul\MarketoRest\Lead\Model\SyncCustomObjectRequest $sync_custom_object_request syncCustomObjectRequest (required)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject
     */
    public function syncOpportunitiesUsingPOST($sync_custom_object_request)
    {
        list($response) = $this->syncOpportunitiesUsingPOSTWithHttpInfo($sync_custom_object_request);
        return $response;
    }

    /**
     * Sync Opportunities
     *
     * @param  \NecLimDul\MarketoRest\Lead\Model\SyncCustomObjectRequest $sync_custom_object_request syncCustomObjectRequest (required)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject, HTTP status code, HTTP response headers (array of strings)
     */
    public function syncOpportunitiesUsingPOSTWithHttpInfo($sync_custom_object_request)
    {
        $request = $this->syncOpportunitiesUsingPOSTRequest($sync_custom_object_request);
        try {
            $response = $this->makeRequest($request);
            return $this->responseToReturn($response, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject');
        } catch (ApiException $e) {
            throw $this->syncOpportunitiesUsingPOSTHandleException($e);
        }
    }

    /**
     * Sync Opportunities
     *
     * @param  \NecLimDul\MarketoRest\Lead\Model\SyncCustomObjectRequest $sync_custom_object_request syncCustomObjectRequest (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function syncOpportunitiesUsingPOSTAsync($sync_custom_object_request)
    {
        return $this->syncOpportunitiesUsingPOSTAsyncWithHttpInfo($sync_custom_object_request)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Sync Opportunities
     *
     * @param  \NecLimDul\MarketoRest\Lead\Model\SyncCustomObjectRequest $sync_custom_object_request syncCustomObjectRequest (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function syncOpportunitiesUsingPOSTAsyncWithHttpInfo($sync_custom_object_request)
    {
        $request = $this->syncOpportunitiesUsingPOSTRequest($sync_custom_object_request);
        return $this->makeAsyncRequest($request, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject', [$this, 'syncOpportunitiesUsingPOSTHandleException']);
    }

    /**
     * Create request for operation 'syncOpportunitiesUsingPOST'
     *
     * @param  \NecLimDul\MarketoRest\Lead\Model\SyncCustomObjectRequest $sync_custom_object_request syncCustomObjectRequest (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function syncOpportunitiesUsingPOSTRequest($sync_custom_object_request)
    {
        // Verify the required parameter 'sync_custom_object_request' is set.
        if (!isset($sync_custom_object_request)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $sync_custom_object_request when calling syncOpportunitiesUsingPOST'
            );
        }

        $resourcePath = '/rest/v1/opportunities.json';
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $headers = $this->headerSelector->selectHeaders(
            ['application/json'],
            ['application/json']
        );
        $httpBody = ObjectSerializer::toBodyValue($sync_custom_object_request, $headers['Content-Type'] === 'application/json');


        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = Query::build($queryParams);
        return new Request(
            'POST',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Exception handler for syncOpportunityRolesUsingPOST.
     *
     * @param \NecLimDul\MarketoRest\Lead\ApiException $e Unprocessed exception.
     *
     * @return \NecLimDul\MarketoRest\Lead\ApiException Processed exception.
     */
    protected function syncOpportunityRolesUsingPOSTHandleException(ApiException $e)
    {
        switch ($e->getCode()) {
            case 200:
                $e->setResponseObject(
                    $this->deserializeResponseBody(
                        $e->getResponseBody(),
                        '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject',
                        $e->getResponseHeaders()
                    )
                );
                break;
        }
        return $e;
    }

    /**
     * Sync Opportunity Roles
     *
     * @param  \NecLimDul\MarketoRest\Lead\Model\SyncCustomObjectRequest $sync_custom_object_request syncCustomObjectRequest (required)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject
     */
    public function syncOpportunityRolesUsingPOST($sync_custom_object_request)
    {
        list($response) = $this->syncOpportunityRolesUsingPOSTWithHttpInfo($sync_custom_object_request);
        return $response;
    }

    /**
     * Sync Opportunity Roles
     *
     * @param  \NecLimDul\MarketoRest\Lead\Model\SyncCustomObjectRequest $sync_custom_object_request syncCustomObjectRequest (required)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject, HTTP status code, HTTP response headers (array of strings)
     */
    public function syncOpportunityRolesUsingPOSTWithHttpInfo($sync_custom_object_request)
    {
        $request = $this->syncOpportunityRolesUsingPOSTRequest($sync_custom_object_request);
        try {
            $response = $this->makeRequest($request);
            return $this->responseToReturn($response, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject');
        } catch (ApiException $e) {
            throw $this->syncOpportunityRolesUsingPOSTHandleException($e);
        }
    }

    /**
     * Sync Opportunity Roles
     *
     * @param  \NecLimDul\MarketoRest\Lead\Model\SyncCustomObjectRequest $sync_custom_object_request syncCustomObjectRequest (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function syncOpportunityRolesUsingPOSTAsync($sync_custom_object_request)
    {
        return $this->syncOpportunityRolesUsingPOSTAsyncWithHttpInfo($sync_custom_object_request)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Sync Opportunity Roles
     *
     * @param  \NecLimDul\MarketoRest\Lead\Model\SyncCustomObjectRequest $sync_custom_object_request syncCustomObjectRequest (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function syncOpportunityRolesUsingPOSTAsyncWithHttpInfo($sync_custom_object_request)
    {
        $request = $this->syncOpportunityRolesUsingPOSTRequest($sync_custom_object_request);
        return $this->makeAsyncRequest($request, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject', [$this, 'syncOpportunityRolesUsingPOSTHandleException']);
    }

    /**
     * Create request for operation 'syncOpportunityRolesUsingPOST'
     *
     * @param  \NecLimDul\MarketoRest\Lead\Model\SyncCustomObjectRequest $sync_custom_object_request syncCustomObjectRequest (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function syncOpportunityRolesUsingPOSTRequest($sync_custom_object_request)
    {
        // Verify the required parameter 'sync_custom_object_request' is set.
        if (!isset($sync_custom_object_request)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $sync_custom_object_request when calling syncOpportunityRolesUsingPOST'
            );
        }

        $resourcePath = '/rest/v1/opportunities/roles.json';
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $headers = $this->headerSelector->selectHeaders(
            ['application/json'],
            ['application/json']
        );
        $httpBody = ObjectSerializer::toBodyValue($sync_custom_object_request, $headers['Content-Type'] === 'application/json');


        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = Query::build($queryParams);
        return new Request(
            'POST',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Create http client option
     *
     * @throws \RuntimeException on file opening failure
     * @return array of http client options
     */
    protected function createHttpClientOption()
    {
        $options = [];
        if ($this->config->getDebug()) {
            $options[RequestOptions::DEBUG] = fopen($this->config->getDebugFile(), 'a');
            if (!$options[RequestOptions::DEBUG]) {
                throw new \RuntimeException('Failed to open the debug file: ' . $this->config->getDebugFile());
            }
        }

        return $options;
    }

    /**
     * Make a request.
     *
     * @param \GuzzleHttp\Psr7\Request $request An initialized request object.
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @return \Psr\Http\Message\ResponseInterface
     */
    private function makeRequest(Request $request) {
        $options = $this->createHttpClientOption();
        try {
           $response = $this->client->send($request, $options);
        } catch (RequestException $e) {
            $response = $e->getResponse();
            throw new ApiException(
                "[{$e->getCode()}] {$e->getMessage()}",
                (int) $e->getCode(),
                $response ? $response->getHeaders() : null,
                $response ? (string) $response->getBody() : null
            );
        }

        $statusCode = $response->getStatusCode();
        if ($statusCode < 200 || $statusCode > 299) {
            throw new ApiException(
                sprintf(
                    '[%d] Error connecting to the API (%s)',
                    $statusCode,
                    (string) $request->getUri()
                ),
                $statusCode,
                $response->getHeaders(),
                (string) $response->getBody()
            );
        }
        return $response;
    }

    /**
     * Make an async request.
     *
     * @param \GuzzleHttp\Psr7\Request $request An initialized request object.
     * @param string $returnType The return type.
     * @param callable $exceptionHandler A callback to process HTTP errors.
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @return \GuzzleHttp\Promise\PromiseInterface A promise that will return a processed response.
     */
    private function makeAsyncRequest(Request $request, string $returnType, callable $exceptionHandler)
    {
        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    return $this->responseToReturn($response, $returnType);
                },
                function (RequestException $exception) use ($exceptionHandler) {
                    $response = $exception->getResponse();
                    $e = new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $response ? $response->getStatusCode() : 0,
                            (string) $exception->getRequest()->getUri()
                        ),
                        (int) $exception->getCode(),
                        $response ? $response->getHeaders() : null,
                        $response ? (string) $response->getBody() : null
                    );
                    throw $exceptionHandler($e);
                }
            );
    }

    /**
     * Convert a response to a return standard return array.
     *
     * @param \Psr\Http\Message\ResponseInterface $response A response from a request with a serialized body.
     * @param string $returnType The primary return type.
     *
     * @return array
     */
    private function responseToReturn(ResponseInterface $response, string $returnType) {
        return [
            $this->deserializeResponseBody($response->getBody(), $returnType),
            $response->getStatusCode(),
            $response->getHeaders()
        ];
    }

    /**
     * Deserialize a response body.
     *
     * @param mixed $responseBody
     *   The response body.
     * @param string $returnType
     *   The return type.
     * @param array<string, string[]>|null $headers
     *   The a list of headers from the response.
     * @return mixed
     *   Either a string or a stream to be passed to a file object.
     */
    private function deserializeResponseBody($responseBody, string $returnType, ?array $headers = [])
    {
        return ObjectSerializer::deserialize(
            $returnType === '\SplFileObject' ? $responseBody : (string) $responseBody,
            $returnType,
            $headers
        );
    }

}
