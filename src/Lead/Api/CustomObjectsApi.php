<?php
/**
 * CustomObjectsApi
 *
 * @category Class
 * @package  NecLimDul\MarketoRest\Lead
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Marketo Rest API
 *
 * Marketo Rest API
 *
 * OpenAPI spec version: 1.0
 * Contact: developerfeedback@marketo.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.26
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace NecLimDul\MarketoRest\Lead\Api;

use GuzzleHttp\Client;
use GuzzleHttp\ClientInterface;
use GuzzleHttp\Exception\RequestException;
use GuzzleHttp\Psr7\MultipartStream;
use GuzzleHttp\Psr7\Query;
use GuzzleHttp\Psr7\Request;
use GuzzleHttp\RequestOptions;
use Psr\Http\Message\ResponseInterface;
use NecLimDul\MarketoRest\Lead\ApiException;
use NecLimDul\MarketoRest\Lead\Configuration;
use NecLimDul\MarketoRest\Lead\HeaderSelector;
use NecLimDul\MarketoRest\Lead\ObjectSerializer;

/**
 * CustomObjectsApi Class Doc Comment
 *
 * @category Class
 * @package  NecLimDul\MarketoRest\Lead
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CustomObjectsApi
{

    /**
     * @var ClientInterface
     */
    protected $client;

    /**
     * @var Configuration
     */
    protected $config;

    /**
     * @var HeaderSelector
     */
    protected $headerSelector;

    /**
     * @var int Host index
     */
    protected $hostIndex;

    /**
     * @param ClientInterface|null $client
     * @param Configuration|null   $config
     * @param HeaderSelector|null  $selector
     * @param int                  $hostIndex (Optional) host index to select the list of hosts if defined in the OpenAPI spec
     */
    public function __construct(
        ClientInterface $client = null,
        Configuration $config = null,
        HeaderSelector $selector = null,
        $hostIndex = 0
    ) {
        $this->client = $client ?: new Client();
        $this->config = $config ?: new Configuration();
        $this->headerSelector = $selector ?: new HeaderSelector();
        $this->hostIndex = $hostIndex;
    }

    /**
     * Set the host index
     *
     * @param int $hostIndex Host index (required)
     */
    public function setHostIndex($hostIndex): void
    {
        $this->hostIndex = $hostIndex;
    }

    /**
     * Get the host index
     *
     * @return int Host index
     */
    public function getHostIndex()
    {
        return $this->hostIndex;
    }

    /**
     * @return Configuration
     */
    public function getConfig()
    {
        return $this->config;
    }

    /**
     * Exception handler for addCustomObjectTypeFieldsUsingPOST.
     *
     * @param \NecLimDul\MarketoRest\Lead\ApiException $e Unprocessed exception.
     *
     * @return \NecLimDul\MarketoRest\Lead\ApiException Processed exception.
     */
    protected function addCustomObjectTypeFieldsUsingPOSTHandleException(ApiException $e)
    {
        switch ($e->getCode()) {
            case 200:
                $e->setResponseObject(
                    $this->deserializeResponseBody(
                        $e->getResponseBody(),
                        '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType',
                        $e->getResponseHeaders()
                    )
                );
                break;
        }
        return $e;
    }

    /**
     * Add Custom Object Type Fields
     *
     * @param  string $api_name API name of custom object type (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\AddCustomObjectTypeFieldsRequest $add_custom_object_type_fields_request JSON object containing custom object type fields (required)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType
     */
    public function addCustomObjectTypeFieldsUsingPOST($api_name, $add_custom_object_type_fields_request)
    {
        list($response) = $this->addCustomObjectTypeFieldsUsingPOSTWithHttpInfo($api_name, $add_custom_object_type_fields_request);
        return $response;
    }

    /**
     * Add Custom Object Type Fields
     *
     * @param  string $api_name API name of custom object type (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\AddCustomObjectTypeFieldsRequest $add_custom_object_type_fields_request JSON object containing custom object type fields (required)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType, HTTP status code, HTTP response headers (array of strings)
     */
    public function addCustomObjectTypeFieldsUsingPOSTWithHttpInfo($api_name, $add_custom_object_type_fields_request)
    {
        $request = $this->addCustomObjectTypeFieldsUsingPOSTRequest($api_name, $add_custom_object_type_fields_request);
        try {
            $response = $this->makeRequest($request);
            return $this->responseToReturn($response, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType');
        } catch (ApiException $e) {
            throw $this->addCustomObjectTypeFieldsUsingPOSTHandleException($e);
        }
    }

    /**
     * Add Custom Object Type Fields
     *
     * @param  string $api_name API name of custom object type (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\AddCustomObjectTypeFieldsRequest $add_custom_object_type_fields_request JSON object containing custom object type fields (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function addCustomObjectTypeFieldsUsingPOSTAsync($api_name, $add_custom_object_type_fields_request)
    {
        return $this->addCustomObjectTypeFieldsUsingPOSTAsyncWithHttpInfo($api_name, $add_custom_object_type_fields_request)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Add Custom Object Type Fields
     *
     * @param  string $api_name API name of custom object type (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\AddCustomObjectTypeFieldsRequest $add_custom_object_type_fields_request JSON object containing custom object type fields (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function addCustomObjectTypeFieldsUsingPOSTAsyncWithHttpInfo($api_name, $add_custom_object_type_fields_request)
    {
        $request = $this->addCustomObjectTypeFieldsUsingPOSTRequest($api_name, $add_custom_object_type_fields_request);
        return $this->makeAsyncRequest($request, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType', [$this, 'addCustomObjectTypeFieldsUsingPOSTHandleException']);
    }

    /**
     * Create request for operation 'addCustomObjectTypeFieldsUsingPOST'
     *
     * @param  string $api_name API name of custom object type (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\AddCustomObjectTypeFieldsRequest $add_custom_object_type_fields_request JSON object containing custom object type fields (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function addCustomObjectTypeFieldsUsingPOSTRequest(
        string $api_name,
        \NecLimDul\MarketoRest\Lead\Model\AddCustomObjectTypeFieldsRequest $add_custom_object_type_fields_request
    ): Request
    {

        $resourcePath = '/rest/v1/customobjects/schema/{apiName}/addField.json';
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';

        // Path parameters.
        $resourcePath = str_replace(
            '{' . 'apiName' . '}',
            ObjectSerializer::toPathValue($api_name),
            $resourcePath
        );
        $headers = $this->headerSelector->selectHeaders(
            ['application/json'],
            ['application/json']
        );
        $httpBody = ObjectSerializer::toBodyValue($add_custom_object_type_fields_request, $headers['Content-Type'] === 'application/json');


        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = Query::build($queryParams);
        return new Request(
            'POST',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Exception handler for approveCustomObjectTypeUsingPOST.
     *
     * @param \NecLimDul\MarketoRest\Lead\ApiException $e Unprocessed exception.
     *
     * @return \NecLimDul\MarketoRest\Lead\ApiException Processed exception.
     */
    protected function approveCustomObjectTypeUsingPOSTHandleException(ApiException $e)
    {
        switch ($e->getCode()) {
            case 200:
                $e->setResponseObject(
                    $this->deserializeResponseBody(
                        $e->getResponseBody(),
                        '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType',
                        $e->getResponseHeaders()
                    )
                );
                break;
        }
        return $e;
    }

    /**
     * Approve Custom Object Type
     *
     * @param  string $api_name API Name of the custom object type to approve (required)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType
     */
    public function approveCustomObjectTypeUsingPOST($api_name)
    {
        list($response) = $this->approveCustomObjectTypeUsingPOSTWithHttpInfo($api_name);
        return $response;
    }

    /**
     * Approve Custom Object Type
     *
     * @param  string $api_name API Name of the custom object type to approve (required)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType, HTTP status code, HTTP response headers (array of strings)
     */
    public function approveCustomObjectTypeUsingPOSTWithHttpInfo($api_name)
    {
        $request = $this->approveCustomObjectTypeUsingPOSTRequest($api_name);
        try {
            $response = $this->makeRequest($request);
            return $this->responseToReturn($response, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType');
        } catch (ApiException $e) {
            throw $this->approveCustomObjectTypeUsingPOSTHandleException($e);
        }
    }

    /**
     * Approve Custom Object Type
     *
     * @param  string $api_name API Name of the custom object type to approve (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function approveCustomObjectTypeUsingPOSTAsync($api_name)
    {
        return $this->approveCustomObjectTypeUsingPOSTAsyncWithHttpInfo($api_name)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Approve Custom Object Type
     *
     * @param  string $api_name API Name of the custom object type to approve (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function approveCustomObjectTypeUsingPOSTAsyncWithHttpInfo($api_name)
    {
        $request = $this->approveCustomObjectTypeUsingPOSTRequest($api_name);
        return $this->makeAsyncRequest($request, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType', [$this, 'approveCustomObjectTypeUsingPOSTHandleException']);
    }

    /**
     * Create request for operation 'approveCustomObjectTypeUsingPOST'
     *
     * @param  string $api_name API Name of the custom object type to approve (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function approveCustomObjectTypeUsingPOSTRequest(
        string $api_name
    ): Request
    {

        $resourcePath = '/rest/v1/customobjects/schema/{apiName}/approve.json';
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';

        // Path parameters.
        $resourcePath = str_replace(
            '{' . 'apiName' . '}',
            ObjectSerializer::toPathValue($api_name),
            $resourcePath
        );
        $headers = $this->headerSelector->selectHeaders(
            ['application/json'],
            ['application/json']
        );


        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = Query::build($queryParams);
        return new Request(
            'POST',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Exception handler for deleteCustomObjectTypeFieldsUsingPOST.
     *
     * @param \NecLimDul\MarketoRest\Lead\ApiException $e Unprocessed exception.
     *
     * @return \NecLimDul\MarketoRest\Lead\ApiException Processed exception.
     */
    protected function deleteCustomObjectTypeFieldsUsingPOSTHandleException(ApiException $e)
    {
        switch ($e->getCode()) {
            case 200:
                $e->setResponseObject(
                    $this->deserializeResponseBody(
                        $e->getResponseBody(),
                        '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType',
                        $e->getResponseHeaders()
                    )
                );
                break;
        }
        return $e;
    }

    /**
     * Delete Custom Object Type Fields
     *
     * @param  string $api_name API name of custom object type (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\DeleteCustomObjectTypeFieldsRequest $delete_custom_object_type_fields_request JSON object containing custom object type fields (required)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType
     */
    public function deleteCustomObjectTypeFieldsUsingPOST($api_name, $delete_custom_object_type_fields_request)
    {
        list($response) = $this->deleteCustomObjectTypeFieldsUsingPOSTWithHttpInfo($api_name, $delete_custom_object_type_fields_request);
        return $response;
    }

    /**
     * Delete Custom Object Type Fields
     *
     * @param  string $api_name API name of custom object type (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\DeleteCustomObjectTypeFieldsRequest $delete_custom_object_type_fields_request JSON object containing custom object type fields (required)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType, HTTP status code, HTTP response headers (array of strings)
     */
    public function deleteCustomObjectTypeFieldsUsingPOSTWithHttpInfo($api_name, $delete_custom_object_type_fields_request)
    {
        $request = $this->deleteCustomObjectTypeFieldsUsingPOSTRequest($api_name, $delete_custom_object_type_fields_request);
        try {
            $response = $this->makeRequest($request);
            return $this->responseToReturn($response, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType');
        } catch (ApiException $e) {
            throw $this->deleteCustomObjectTypeFieldsUsingPOSTHandleException($e);
        }
    }

    /**
     * Delete Custom Object Type Fields
     *
     * @param  string $api_name API name of custom object type (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\DeleteCustomObjectTypeFieldsRequest $delete_custom_object_type_fields_request JSON object containing custom object type fields (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function deleteCustomObjectTypeFieldsUsingPOSTAsync($api_name, $delete_custom_object_type_fields_request)
    {
        return $this->deleteCustomObjectTypeFieldsUsingPOSTAsyncWithHttpInfo($api_name, $delete_custom_object_type_fields_request)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Delete Custom Object Type Fields
     *
     * @param  string $api_name API name of custom object type (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\DeleteCustomObjectTypeFieldsRequest $delete_custom_object_type_fields_request JSON object containing custom object type fields (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function deleteCustomObjectTypeFieldsUsingPOSTAsyncWithHttpInfo($api_name, $delete_custom_object_type_fields_request)
    {
        $request = $this->deleteCustomObjectTypeFieldsUsingPOSTRequest($api_name, $delete_custom_object_type_fields_request);
        return $this->makeAsyncRequest($request, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType', [$this, 'deleteCustomObjectTypeFieldsUsingPOSTHandleException']);
    }

    /**
     * Create request for operation 'deleteCustomObjectTypeFieldsUsingPOST'
     *
     * @param  string $api_name API name of custom object type (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\DeleteCustomObjectTypeFieldsRequest $delete_custom_object_type_fields_request JSON object containing custom object type fields (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function deleteCustomObjectTypeFieldsUsingPOSTRequest(
        string $api_name,
        \NecLimDul\MarketoRest\Lead\Model\DeleteCustomObjectTypeFieldsRequest $delete_custom_object_type_fields_request
    ): Request
    {

        $resourcePath = '/rest/v1/customobjects/schema/{apiName}/deleteField.json';
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';

        // Path parameters.
        $resourcePath = str_replace(
            '{' . 'apiName' . '}',
            ObjectSerializer::toPathValue($api_name),
            $resourcePath
        );
        $headers = $this->headerSelector->selectHeaders(
            ['application/json'],
            ['application/json']
        );
        $httpBody = ObjectSerializer::toBodyValue($delete_custom_object_type_fields_request, $headers['Content-Type'] === 'application/json');


        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = Query::build($queryParams);
        return new Request(
            'POST',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Exception handler for deleteCustomObjectTypeUsingPOST.
     *
     * @param \NecLimDul\MarketoRest\Lead\ApiException $e Unprocessed exception.
     *
     * @return \NecLimDul\MarketoRest\Lead\ApiException Processed exception.
     */
    protected function deleteCustomObjectTypeUsingPOSTHandleException(ApiException $e)
    {
        switch ($e->getCode()) {
            case 200:
                $e->setResponseObject(
                    $this->deserializeResponseBody(
                        $e->getResponseBody(),
                        '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType',
                        $e->getResponseHeaders()
                    )
                );
                break;
        }
        return $e;
    }

    /**
     * Delete Custom Object Type
     *
     * @param  string $api_name API Name of the custom object type to delete (required)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType
     */
    public function deleteCustomObjectTypeUsingPOST($api_name)
    {
        list($response) = $this->deleteCustomObjectTypeUsingPOSTWithHttpInfo($api_name);
        return $response;
    }

    /**
     * Delete Custom Object Type
     *
     * @param  string $api_name API Name of the custom object type to delete (required)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType, HTTP status code, HTTP response headers (array of strings)
     */
    public function deleteCustomObjectTypeUsingPOSTWithHttpInfo($api_name)
    {
        $request = $this->deleteCustomObjectTypeUsingPOSTRequest($api_name);
        try {
            $response = $this->makeRequest($request);
            return $this->responseToReturn($response, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType');
        } catch (ApiException $e) {
            throw $this->deleteCustomObjectTypeUsingPOSTHandleException($e);
        }
    }

    /**
     * Delete Custom Object Type
     *
     * @param  string $api_name API Name of the custom object type to delete (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function deleteCustomObjectTypeUsingPOSTAsync($api_name)
    {
        return $this->deleteCustomObjectTypeUsingPOSTAsyncWithHttpInfo($api_name)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Delete Custom Object Type
     *
     * @param  string $api_name API Name of the custom object type to delete (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function deleteCustomObjectTypeUsingPOSTAsyncWithHttpInfo($api_name)
    {
        $request = $this->deleteCustomObjectTypeUsingPOSTRequest($api_name);
        return $this->makeAsyncRequest($request, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType', [$this, 'deleteCustomObjectTypeUsingPOSTHandleException']);
    }

    /**
     * Create request for operation 'deleteCustomObjectTypeUsingPOST'
     *
     * @param  string $api_name API Name of the custom object type to delete (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function deleteCustomObjectTypeUsingPOSTRequest(
        string $api_name
    ): Request
    {

        $resourcePath = '/rest/v1/customobjects/schema/{apiName}/delete.json';
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';

        // Path parameters.
        $resourcePath = str_replace(
            '{' . 'apiName' . '}',
            ObjectSerializer::toPathValue($api_name),
            $resourcePath
        );
        $headers = $this->headerSelector->selectHeaders(
            ['application/json'],
            ['application/json']
        );


        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = Query::build($queryParams);
        return new Request(
            'POST',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Exception handler for deleteCustomObjectsUsingPOST.
     *
     * @param \NecLimDul\MarketoRest\Lead\ApiException $e Unprocessed exception.
     *
     * @return \NecLimDul\MarketoRest\Lead\ApiException Processed exception.
     */
    protected function deleteCustomObjectsUsingPOSTHandleException(ApiException $e)
    {
        switch ($e->getCode()) {
            case 200:
                $e->setResponseObject(
                    $this->deserializeResponseBody(
                        $e->getResponseBody(),
                        '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject',
                        $e->getResponseHeaders()
                    )
                );
                break;
        }
        return $e;
    }

    /**
     * Delete Custom Objects
     *
     * @param  string $custom_object_name customObjectName (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\DeleteCustomObjectRequest $delete_custom_object_request deleteCustomObjectRequest (optional)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject
     */
    public function deleteCustomObjectsUsingPOST($custom_object_name, $delete_custom_object_request = null)
    {
        list($response) = $this->deleteCustomObjectsUsingPOSTWithHttpInfo($custom_object_name, $delete_custom_object_request);
        return $response;
    }

    /**
     * Delete Custom Objects
     *
     * @param  string $custom_object_name customObjectName (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\DeleteCustomObjectRequest $delete_custom_object_request deleteCustomObjectRequest (optional)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject, HTTP status code, HTTP response headers (array of strings)
     */
    public function deleteCustomObjectsUsingPOSTWithHttpInfo($custom_object_name, $delete_custom_object_request = null)
    {
        $request = $this->deleteCustomObjectsUsingPOSTRequest($custom_object_name, $delete_custom_object_request);
        try {
            $response = $this->makeRequest($request);
            return $this->responseToReturn($response, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject');
        } catch (ApiException $e) {
            throw $this->deleteCustomObjectsUsingPOSTHandleException($e);
        }
    }

    /**
     * Delete Custom Objects
     *
     * @param  string $custom_object_name customObjectName (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\DeleteCustomObjectRequest $delete_custom_object_request deleteCustomObjectRequest (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function deleteCustomObjectsUsingPOSTAsync($custom_object_name, $delete_custom_object_request = null)
    {
        return $this->deleteCustomObjectsUsingPOSTAsyncWithHttpInfo($custom_object_name, $delete_custom_object_request)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Delete Custom Objects
     *
     * @param  string $custom_object_name customObjectName (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\DeleteCustomObjectRequest $delete_custom_object_request deleteCustomObjectRequest (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function deleteCustomObjectsUsingPOSTAsyncWithHttpInfo($custom_object_name, $delete_custom_object_request = null)
    {
        $request = $this->deleteCustomObjectsUsingPOSTRequest($custom_object_name, $delete_custom_object_request);
        return $this->makeAsyncRequest($request, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject', [$this, 'deleteCustomObjectsUsingPOSTHandleException']);
    }

    /**
     * Create request for operation 'deleteCustomObjectsUsingPOST'
     *
     * @param  string $custom_object_name customObjectName (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\DeleteCustomObjectRequest $delete_custom_object_request deleteCustomObjectRequest (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function deleteCustomObjectsUsingPOSTRequest(
        string $custom_object_name,
        \NecLimDul\MarketoRest\Lead\Model\DeleteCustomObjectRequest $delete_custom_object_request = null
    ): Request
    {

        $resourcePath = '/rest/v1/customobjects/{customObjectName}/delete.json';
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';

        // Path parameters.
        $resourcePath = str_replace(
            '{' . 'customObjectName' . '}',
            ObjectSerializer::toPathValue($custom_object_name),
            $resourcePath
        );
        $headers = $this->headerSelector->selectHeaders(
            ['application/json'],
            ['application/json']
        );
        // for model (json/xml)
        if (!empty($delete_custom_object_request)) {
            $httpBody = ObjectSerializer::toBodyValue($delete_custom_object_request, $headers['Content-Type'] === 'application/json');
        }


        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = Query::build($queryParams);
        return new Request(
            'POST',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Exception handler for describeCustomObjectTypeUsingGET.
     *
     * @param \NecLimDul\MarketoRest\Lead\ApiException $e Unprocessed exception.
     *
     * @return \NecLimDul\MarketoRest\Lead\ApiException Processed exception.
     */
    protected function describeCustomObjectTypeUsingGETHandleException(ApiException $e)
    {
        switch ($e->getCode()) {
            case 200:
                $e->setResponseObject(
                    $this->deserializeResponseBody(
                        $e->getResponseBody(),
                        '\NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectMetaData',
                        $e->getResponseHeaders()
                    )
                );
                break;
        }
        return $e;
    }

    /**
     * Describe Custom Object Type
     *
     * @param  string $api_name API name of custom object type to describe (required)
     * @param  string $state State of custom object type to filter on.  By default, if an approved version exists, it is returned.  Otherwise, the draft version is returned. (optional)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectMetaData
     */
    public function describeCustomObjectTypeUsingGET($api_name, $state = null)
    {
        list($response) = $this->describeCustomObjectTypeUsingGETWithHttpInfo($api_name, $state);
        return $response;
    }

    /**
     * Describe Custom Object Type
     *
     * @param  string $api_name API name of custom object type to describe (required)
     * @param  string $state State of custom object type to filter on.  By default, if an approved version exists, it is returned.  Otherwise, the draft version is returned. (optional)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectMetaData, HTTP status code, HTTP response headers (array of strings)
     */
    public function describeCustomObjectTypeUsingGETWithHttpInfo($api_name, $state = null)
    {
        $request = $this->describeCustomObjectTypeUsingGETRequest($api_name, $state);
        try {
            $response = $this->makeRequest($request);
            return $this->responseToReturn($response, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectMetaData');
        } catch (ApiException $e) {
            throw $this->describeCustomObjectTypeUsingGETHandleException($e);
        }
    }

    /**
     * Describe Custom Object Type
     *
     * @param  string $api_name API name of custom object type to describe (required)
     * @param  string $state State of custom object type to filter on.  By default, if an approved version exists, it is returned.  Otherwise, the draft version is returned. (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function describeCustomObjectTypeUsingGETAsync($api_name, $state = null)
    {
        return $this->describeCustomObjectTypeUsingGETAsyncWithHttpInfo($api_name, $state)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Describe Custom Object Type
     *
     * @param  string $api_name API name of custom object type to describe (required)
     * @param  string $state State of custom object type to filter on.  By default, if an approved version exists, it is returned.  Otherwise, the draft version is returned. (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function describeCustomObjectTypeUsingGETAsyncWithHttpInfo($api_name, $state = null)
    {
        $request = $this->describeCustomObjectTypeUsingGETRequest($api_name, $state);
        return $this->makeAsyncRequest($request, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectMetaData', [$this, 'describeCustomObjectTypeUsingGETHandleException']);
    }

    /**
     * Create request for operation 'describeCustomObjectTypeUsingGET'
     *
     * @param  string $api_name API name of custom object type to describe (required)
     * @param  string $state State of custom object type to filter on.  By default, if an approved version exists, it is returned.  Otherwise, the draft version is returned. (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function describeCustomObjectTypeUsingGETRequest(
        string $api_name,
        string $state = null
    ): Request
    {

        $resourcePath = '/rest/v1/customobjects/schema/{apiName}/describe.json';
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';

        // Query parameters.
        $queryParams['state'] = ObjectSerializer::toQueryValue($state);
        // Remove any null (optional values).
        $queryParams = array_filter($queryParams, function($v) { return $v !== null; });

        // Path parameters.
        $resourcePath = str_replace(
            '{' . 'apiName' . '}',
            ObjectSerializer::toPathValue($api_name),
            $resourcePath
        );
        $headers = $this->headerSelector->selectHeaders(
            ['application/json'],
            ['application/json']
        );


        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = Query::build($queryParams);
        return new Request(
            'GET',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Exception handler for describeUsingGET1.
     *
     * @param \NecLimDul\MarketoRest\Lead\ApiException $e Unprocessed exception.
     *
     * @return \NecLimDul\MarketoRest\Lead\ApiException Processed exception.
     */
    protected function describeUsingGET1HandleException(ApiException $e)
    {
        switch ($e->getCode()) {
            case 200:
                $e->setResponseObject(
                    $this->deserializeResponseBody(
                        $e->getResponseBody(),
                        '\NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectMetaData',
                        $e->getResponseHeaders()
                    )
                );
                break;
        }
        return $e;
    }

    /**
     * Describe Custom Objects
     *
     * @param  string $custom_object_name customObjectName (required)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectMetaData
     */
    public function describeUsingGET1($custom_object_name)
    {
        list($response) = $this->describeUsingGET1WithHttpInfo($custom_object_name);
        return $response;
    }

    /**
     * Describe Custom Objects
     *
     * @param  string $custom_object_name customObjectName (required)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectMetaData, HTTP status code, HTTP response headers (array of strings)
     */
    public function describeUsingGET1WithHttpInfo($custom_object_name)
    {
        $request = $this->describeUsingGET1Request($custom_object_name);
        try {
            $response = $this->makeRequest($request);
            return $this->responseToReturn($response, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectMetaData');
        } catch (ApiException $e) {
            throw $this->describeUsingGET1HandleException($e);
        }
    }

    /**
     * Describe Custom Objects
     *
     * @param  string $custom_object_name customObjectName (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function describeUsingGET1Async($custom_object_name)
    {
        return $this->describeUsingGET1AsyncWithHttpInfo($custom_object_name)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Describe Custom Objects
     *
     * @param  string $custom_object_name customObjectName (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function describeUsingGET1AsyncWithHttpInfo($custom_object_name)
    {
        $request = $this->describeUsingGET1Request($custom_object_name);
        return $this->makeAsyncRequest($request, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectMetaData', [$this, 'describeUsingGET1HandleException']);
    }

    /**
     * Create request for operation 'describeUsingGET1'
     *
     * @param  string $custom_object_name customObjectName (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function describeUsingGET1Request(
        string $custom_object_name
    ): Request
    {

        $resourcePath = '/rest/v1/customobjects/{customObjectName}/describe.json';
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';

        // Path parameters.
        $resourcePath = str_replace(
            '{' . 'customObjectName' . '}',
            ObjectSerializer::toPathValue($custom_object_name),
            $resourcePath
        );
        $headers = $this->headerSelector->selectHeaders(
            ['application/json'],
            ['application/json']
        );


        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = Query::build($queryParams);
        return new Request(
            'GET',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Exception handler for discardCustomObjectTypeUsingPOST.
     *
     * @param \NecLimDul\MarketoRest\Lead\ApiException $e Unprocessed exception.
     *
     * @return \NecLimDul\MarketoRest\Lead\ApiException Processed exception.
     */
    protected function discardCustomObjectTypeUsingPOSTHandleException(ApiException $e)
    {
        switch ($e->getCode()) {
            case 200:
                $e->setResponseObject(
                    $this->deserializeResponseBody(
                        $e->getResponseBody(),
                        '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType',
                        $e->getResponseHeaders()
                    )
                );
                break;
        }
        return $e;
    }

    /**
     * Discard Custom Object Type Draft
     *
     * @param  string $api_name API Name of the custom object type draft to discard (required)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType
     */
    public function discardCustomObjectTypeUsingPOST($api_name)
    {
        list($response) = $this->discardCustomObjectTypeUsingPOSTWithHttpInfo($api_name);
        return $response;
    }

    /**
     * Discard Custom Object Type Draft
     *
     * @param  string $api_name API Name of the custom object type draft to discard (required)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType, HTTP status code, HTTP response headers (array of strings)
     */
    public function discardCustomObjectTypeUsingPOSTWithHttpInfo($api_name)
    {
        $request = $this->discardCustomObjectTypeUsingPOSTRequest($api_name);
        try {
            $response = $this->makeRequest($request);
            return $this->responseToReturn($response, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType');
        } catch (ApiException $e) {
            throw $this->discardCustomObjectTypeUsingPOSTHandleException($e);
        }
    }

    /**
     * Discard Custom Object Type Draft
     *
     * @param  string $api_name API Name of the custom object type draft to discard (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function discardCustomObjectTypeUsingPOSTAsync($api_name)
    {
        return $this->discardCustomObjectTypeUsingPOSTAsyncWithHttpInfo($api_name)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Discard Custom Object Type Draft
     *
     * @param  string $api_name API Name of the custom object type draft to discard (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function discardCustomObjectTypeUsingPOSTAsyncWithHttpInfo($api_name)
    {
        $request = $this->discardCustomObjectTypeUsingPOSTRequest($api_name);
        return $this->makeAsyncRequest($request, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType', [$this, 'discardCustomObjectTypeUsingPOSTHandleException']);
    }

    /**
     * Create request for operation 'discardCustomObjectTypeUsingPOST'
     *
     * @param  string $api_name API Name of the custom object type draft to discard (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function discardCustomObjectTypeUsingPOSTRequest(
        string $api_name
    ): Request
    {

        $resourcePath = '/rest/v1/customobjects/schema/{apiName}/discardDraft.json';
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';

        // Path parameters.
        $resourcePath = str_replace(
            '{' . 'apiName' . '}',
            ObjectSerializer::toPathValue($api_name),
            $resourcePath
        );
        $headers = $this->headerSelector->selectHeaders(
            ['application/json'],
            ['application/json']
        );


        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = Query::build($queryParams);
        return new Request(
            'POST',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Exception handler for getCustomObjectTypeDependentAssetsUsingGET.
     *
     * @param \NecLimDul\MarketoRest\Lead\ApiException $e Unprocessed exception.
     *
     * @return \NecLimDul\MarketoRest\Lead\ApiException Processed exception.
     */
    protected function getCustomObjectTypeDependentAssetsUsingGETHandleException(ApiException $e)
    {
        switch ($e->getCode()) {
            case 200:
                $e->setResponseObject(
                    $this->deserializeResponseBody(
                        $e->getResponseBody(),
                        '\NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectDependentAssets',
                        $e->getResponseHeaders()
                    )
                );
                break;
        }
        return $e;
    }

    /**
     * Get Custom Object Dependent Assets
     *
     * @param  string $api_name REST API name for custom object (required)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectDependentAssets
     */
    public function getCustomObjectTypeDependentAssetsUsingGET($api_name)
    {
        list($response) = $this->getCustomObjectTypeDependentAssetsUsingGETWithHttpInfo($api_name);
        return $response;
    }

    /**
     * Get Custom Object Dependent Assets
     *
     * @param  string $api_name REST API name for custom object (required)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectDependentAssets, HTTP status code, HTTP response headers (array of strings)
     */
    public function getCustomObjectTypeDependentAssetsUsingGETWithHttpInfo($api_name)
    {
        $request = $this->getCustomObjectTypeDependentAssetsUsingGETRequest($api_name);
        try {
            $response = $this->makeRequest($request);
            return $this->responseToReturn($response, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectDependentAssets');
        } catch (ApiException $e) {
            throw $this->getCustomObjectTypeDependentAssetsUsingGETHandleException($e);
        }
    }

    /**
     * Get Custom Object Dependent Assets
     *
     * @param  string $api_name REST API name for custom object (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getCustomObjectTypeDependentAssetsUsingGETAsync($api_name)
    {
        return $this->getCustomObjectTypeDependentAssetsUsingGETAsyncWithHttpInfo($api_name)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Get Custom Object Dependent Assets
     *
     * @param  string $api_name REST API name for custom object (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getCustomObjectTypeDependentAssetsUsingGETAsyncWithHttpInfo($api_name)
    {
        $request = $this->getCustomObjectTypeDependentAssetsUsingGETRequest($api_name);
        return $this->makeAsyncRequest($request, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectDependentAssets', [$this, 'getCustomObjectTypeDependentAssetsUsingGETHandleException']);
    }

    /**
     * Create request for operation 'getCustomObjectTypeDependentAssetsUsingGET'
     *
     * @param  string $api_name REST API name for custom object (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function getCustomObjectTypeDependentAssetsUsingGETRequest(
        string $api_name
    ): Request
    {

        $resourcePath = '/rest/v1/customobjects/schema/{apiName}/dependentAssets.json';
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';

        // Path parameters.
        $resourcePath = str_replace(
            '{' . 'apiName' . '}',
            ObjectSerializer::toPathValue($api_name),
            $resourcePath
        );
        $headers = $this->headerSelector->selectHeaders(
            ['application/json'],
            ['application/json']
        );


        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = Query::build($queryParams);
        return new Request(
            'GET',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Exception handler for getCustomObjectTypeFieldDataTypesUsingGET.
     *
     * @param \NecLimDul\MarketoRest\Lead\ApiException $e Unprocessed exception.
     *
     * @return \NecLimDul\MarketoRest\Lead\ApiException Processed exception.
     */
    protected function getCustomObjectTypeFieldDataTypesUsingGETHandleException(ApiException $e)
    {
        switch ($e->getCode()) {
            case 200:
                $e->setResponseObject(
                    $this->deserializeResponseBody(
                        $e->getResponseBody(),
                        '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectTypeFieldDataTypes',
                        $e->getResponseHeaders()
                    )
                );
                break;
        }
        return $e;
    }

    /**
     * Get Custom Object Type Field Data Types
     *
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectTypeFieldDataTypes
     */
    public function getCustomObjectTypeFieldDataTypesUsingGET()
    {
        list($response) = $this->getCustomObjectTypeFieldDataTypesUsingGETWithHttpInfo();
        return $response;
    }

    /**
     * Get Custom Object Type Field Data Types
     *
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectTypeFieldDataTypes, HTTP status code, HTTP response headers (array of strings)
     */
    public function getCustomObjectTypeFieldDataTypesUsingGETWithHttpInfo()
    {
        $request = $this->getCustomObjectTypeFieldDataTypesUsingGETRequest();
        try {
            $response = $this->makeRequest($request);
            return $this->responseToReturn($response, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectTypeFieldDataTypes');
        } catch (ApiException $e) {
            throw $this->getCustomObjectTypeFieldDataTypesUsingGETHandleException($e);
        }
    }

    /**
     * Get Custom Object Type Field Data Types
     *
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getCustomObjectTypeFieldDataTypesUsingGETAsync()
    {
        return $this->getCustomObjectTypeFieldDataTypesUsingGETAsyncWithHttpInfo()
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Get Custom Object Type Field Data Types
     *
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getCustomObjectTypeFieldDataTypesUsingGETAsyncWithHttpInfo()
    {
        $request = $this->getCustomObjectTypeFieldDataTypesUsingGETRequest();
        return $this->makeAsyncRequest($request, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectTypeFieldDataTypes', [$this, 'getCustomObjectTypeFieldDataTypesUsingGETHandleException']);
    }

    /**
     * Create request for operation 'getCustomObjectTypeFieldDataTypesUsingGET'
     *
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function getCustomObjectTypeFieldDataTypesUsingGETRequest(
    ): Request
    {

        $resourcePath = '/rest/v1/customobjects/schema/fieldDataTypes.json';
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $headers = $this->headerSelector->selectHeaders(
            ['application/json'],
            ['application/json']
        );


        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = Query::build($queryParams);
        return new Request(
            'GET',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Exception handler for getCustomObjectTypeLinkableObjectsUsingGET.
     *
     * @param \NecLimDul\MarketoRest\Lead\ApiException $e Unprocessed exception.
     *
     * @return \NecLimDul\MarketoRest\Lead\ApiException Processed exception.
     */
    protected function getCustomObjectTypeLinkableObjectsUsingGETHandleException(ApiException $e)
    {
        switch ($e->getCode()) {
            case 200:
                $e->setResponseObject(
                    $this->deserializeResponseBody(
                        $e->getResponseBody(),
                        '\NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectLinkableObject',
                        $e->getResponseHeaders()
                    )
                );
                break;
        }
        return $e;
    }

    /**
     * Get Custom Object Linkable Objects
     *
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectLinkableObject
     */
    public function getCustomObjectTypeLinkableObjectsUsingGET()
    {
        list($response) = $this->getCustomObjectTypeLinkableObjectsUsingGETWithHttpInfo();
        return $response;
    }

    /**
     * Get Custom Object Linkable Objects
     *
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectLinkableObject, HTTP status code, HTTP response headers (array of strings)
     */
    public function getCustomObjectTypeLinkableObjectsUsingGETWithHttpInfo()
    {
        $request = $this->getCustomObjectTypeLinkableObjectsUsingGETRequest();
        try {
            $response = $this->makeRequest($request);
            return $this->responseToReturn($response, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectLinkableObject');
        } catch (ApiException $e) {
            throw $this->getCustomObjectTypeLinkableObjectsUsingGETHandleException($e);
        }
    }

    /**
     * Get Custom Object Linkable Objects
     *
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getCustomObjectTypeLinkableObjectsUsingGETAsync()
    {
        return $this->getCustomObjectTypeLinkableObjectsUsingGETAsyncWithHttpInfo()
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Get Custom Object Linkable Objects
     *
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getCustomObjectTypeLinkableObjectsUsingGETAsyncWithHttpInfo()
    {
        $request = $this->getCustomObjectTypeLinkableObjectsUsingGETRequest();
        return $this->makeAsyncRequest($request, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectLinkableObject', [$this, 'getCustomObjectTypeLinkableObjectsUsingGETHandleException']);
    }

    /**
     * Create request for operation 'getCustomObjectTypeLinkableObjectsUsingGET'
     *
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function getCustomObjectTypeLinkableObjectsUsingGETRequest(
    ): Request
    {

        $resourcePath = '/rest/v1/customobjects/schema/linkableObjects.json';
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $headers = $this->headerSelector->selectHeaders(
            ['application/json'],
            ['application/json']
        );


        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = Query::build($queryParams);
        return new Request(
            'GET',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Exception handler for getCustomObjectsUsingGET.
     *
     * @param \NecLimDul\MarketoRest\Lead\ApiException $e Unprocessed exception.
     *
     * @return \NecLimDul\MarketoRest\Lead\ApiException Processed exception.
     */
    protected function getCustomObjectsUsingGETHandleException(ApiException $e)
    {
        switch ($e->getCode()) {
            case 200:
                $e->setResponseObject(
                    $this->deserializeResponseBody(
                        $e->getResponseBody(),
                        '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject',
                        $e->getResponseHeaders()
                    )
                );
                break;
        }
        return $e;
    }

    /**
     * Get Custom Objects
     *
     * @param  string $custom_object_name Name of custom object type to retrieve records for (required)
     * @param  string $filter_type Field to filter on. Searchable fields can be retrieved with Describe Custom Object (required)
     * @param  string[] $filter_values Comma-separated list of field values to match against. (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\LookupCustomObjectRequest $custom_object_lookup_request Optional JSON request for retrieving custom objects with compound keys.  Example:&lt;br&gt;&lt;code&gt;{&lt;br&gt;\&quot;filterType\&quot;:\&quot;dedupeFields\&quot;,&lt;br&gt;\&quot;fields\&quot;:[&lt;br&gt;\&quot;marketoGuid\&quot;,&lt;br&gt;\&quot;Bedrooms\&quot;,&lt;br&gt;\&quot;yearBuilt\&quot;&lt;br&gt;],&lt;br&gt;\&quot;input\&quot;:[&lt;br&gt;{&lt;br&gt;\&quot;mlsNum\&quot;:\&quot;1962352\&quot;,&lt;br&gt;\&quot;houseOwnerId\&quot;:\&quot;42645756\&quot;&lt;br&gt;},&lt;br&gt;{&lt;br&gt;\&quot;mlsNum\&quot;:\&quot;3962352\&quot;,&lt;br&gt;\&quot;houseOwnerId\&quot;:\&quot;62645756\&quot;&lt;br&gt;}&lt;br&gt;]&lt;br&gt;}&lt;/code&gt;&lt;br&gt; (optional)
     * @param  string[] $fields Comma-separated list of fields to return for each record.  If unset marketoGuid, dedupeFields, updatedAt, createdAt will be returned (optional)
     * @param  int $batch_size The batch size to return.  The max and default value is 300. (optional)
     * @param  string $next_page_token A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter.  See Paging Tokens for more info. (optional)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject
     */
    public function getCustomObjectsUsingGET($custom_object_name, $filter_type, $filter_values, $custom_object_lookup_request = null, $fields = null, $batch_size = null, $next_page_token = null)
    {
        list($response) = $this->getCustomObjectsUsingGETWithHttpInfo($custom_object_name, $filter_type, $filter_values, $custom_object_lookup_request, $fields, $batch_size, $next_page_token);
        return $response;
    }

    /**
     * Get Custom Objects
     *
     * @param  string $custom_object_name Name of custom object type to retrieve records for (required)
     * @param  string $filter_type Field to filter on. Searchable fields can be retrieved with Describe Custom Object (required)
     * @param  string[] $filter_values Comma-separated list of field values to match against. (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\LookupCustomObjectRequest $custom_object_lookup_request Optional JSON request for retrieving custom objects with compound keys.  Example:&lt;br&gt;&lt;code&gt;{&lt;br&gt;\&quot;filterType\&quot;:\&quot;dedupeFields\&quot;,&lt;br&gt;\&quot;fields\&quot;:[&lt;br&gt;\&quot;marketoGuid\&quot;,&lt;br&gt;\&quot;Bedrooms\&quot;,&lt;br&gt;\&quot;yearBuilt\&quot;&lt;br&gt;],&lt;br&gt;\&quot;input\&quot;:[&lt;br&gt;{&lt;br&gt;\&quot;mlsNum\&quot;:\&quot;1962352\&quot;,&lt;br&gt;\&quot;houseOwnerId\&quot;:\&quot;42645756\&quot;&lt;br&gt;},&lt;br&gt;{&lt;br&gt;\&quot;mlsNum\&quot;:\&quot;3962352\&quot;,&lt;br&gt;\&quot;houseOwnerId\&quot;:\&quot;62645756\&quot;&lt;br&gt;}&lt;br&gt;]&lt;br&gt;}&lt;/code&gt;&lt;br&gt; (optional)
     * @param  string[] $fields Comma-separated list of fields to return for each record.  If unset marketoGuid, dedupeFields, updatedAt, createdAt will be returned (optional)
     * @param  int $batch_size The batch size to return.  The max and default value is 300. (optional)
     * @param  string $next_page_token A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter.  See Paging Tokens for more info. (optional)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject, HTTP status code, HTTP response headers (array of strings)
     */
    public function getCustomObjectsUsingGETWithHttpInfo($custom_object_name, $filter_type, $filter_values, $custom_object_lookup_request = null, $fields = null, $batch_size = null, $next_page_token = null)
    {
        $request = $this->getCustomObjectsUsingGETRequest($custom_object_name, $filter_type, $filter_values, $custom_object_lookup_request, $fields, $batch_size, $next_page_token);
        try {
            $response = $this->makeRequest($request);
            return $this->responseToReturn($response, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject');
        } catch (ApiException $e) {
            throw $this->getCustomObjectsUsingGETHandleException($e);
        }
    }

    /**
     * Get Custom Objects
     *
     * @param  string $custom_object_name Name of custom object type to retrieve records for (required)
     * @param  string $filter_type Field to filter on. Searchable fields can be retrieved with Describe Custom Object (required)
     * @param  string[] $filter_values Comma-separated list of field values to match against. (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\LookupCustomObjectRequest $custom_object_lookup_request Optional JSON request for retrieving custom objects with compound keys.  Example:&lt;br&gt;&lt;code&gt;{&lt;br&gt;\&quot;filterType\&quot;:\&quot;dedupeFields\&quot;,&lt;br&gt;\&quot;fields\&quot;:[&lt;br&gt;\&quot;marketoGuid\&quot;,&lt;br&gt;\&quot;Bedrooms\&quot;,&lt;br&gt;\&quot;yearBuilt\&quot;&lt;br&gt;],&lt;br&gt;\&quot;input\&quot;:[&lt;br&gt;{&lt;br&gt;\&quot;mlsNum\&quot;:\&quot;1962352\&quot;,&lt;br&gt;\&quot;houseOwnerId\&quot;:\&quot;42645756\&quot;&lt;br&gt;},&lt;br&gt;{&lt;br&gt;\&quot;mlsNum\&quot;:\&quot;3962352\&quot;,&lt;br&gt;\&quot;houseOwnerId\&quot;:\&quot;62645756\&quot;&lt;br&gt;}&lt;br&gt;]&lt;br&gt;}&lt;/code&gt;&lt;br&gt; (optional)
     * @param  string[] $fields Comma-separated list of fields to return for each record.  If unset marketoGuid, dedupeFields, updatedAt, createdAt will be returned (optional)
     * @param  int $batch_size The batch size to return.  The max and default value is 300. (optional)
     * @param  string $next_page_token A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter.  See Paging Tokens for more info. (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getCustomObjectsUsingGETAsync($custom_object_name, $filter_type, $filter_values, $custom_object_lookup_request = null, $fields = null, $batch_size = null, $next_page_token = null)
    {
        return $this->getCustomObjectsUsingGETAsyncWithHttpInfo($custom_object_name, $filter_type, $filter_values, $custom_object_lookup_request, $fields, $batch_size, $next_page_token)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Get Custom Objects
     *
     * @param  string $custom_object_name Name of custom object type to retrieve records for (required)
     * @param  string $filter_type Field to filter on. Searchable fields can be retrieved with Describe Custom Object (required)
     * @param  string[] $filter_values Comma-separated list of field values to match against. (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\LookupCustomObjectRequest $custom_object_lookup_request Optional JSON request for retrieving custom objects with compound keys.  Example:&lt;br&gt;&lt;code&gt;{&lt;br&gt;\&quot;filterType\&quot;:\&quot;dedupeFields\&quot;,&lt;br&gt;\&quot;fields\&quot;:[&lt;br&gt;\&quot;marketoGuid\&quot;,&lt;br&gt;\&quot;Bedrooms\&quot;,&lt;br&gt;\&quot;yearBuilt\&quot;&lt;br&gt;],&lt;br&gt;\&quot;input\&quot;:[&lt;br&gt;{&lt;br&gt;\&quot;mlsNum\&quot;:\&quot;1962352\&quot;,&lt;br&gt;\&quot;houseOwnerId\&quot;:\&quot;42645756\&quot;&lt;br&gt;},&lt;br&gt;{&lt;br&gt;\&quot;mlsNum\&quot;:\&quot;3962352\&quot;,&lt;br&gt;\&quot;houseOwnerId\&quot;:\&quot;62645756\&quot;&lt;br&gt;}&lt;br&gt;]&lt;br&gt;}&lt;/code&gt;&lt;br&gt; (optional)
     * @param  string[] $fields Comma-separated list of fields to return for each record.  If unset marketoGuid, dedupeFields, updatedAt, createdAt will be returned (optional)
     * @param  int $batch_size The batch size to return.  The max and default value is 300. (optional)
     * @param  string $next_page_token A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter.  See Paging Tokens for more info. (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getCustomObjectsUsingGETAsyncWithHttpInfo($custom_object_name, $filter_type, $filter_values, $custom_object_lookup_request = null, $fields = null, $batch_size = null, $next_page_token = null)
    {
        $request = $this->getCustomObjectsUsingGETRequest($custom_object_name, $filter_type, $filter_values, $custom_object_lookup_request, $fields, $batch_size, $next_page_token);
        return $this->makeAsyncRequest($request, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject', [$this, 'getCustomObjectsUsingGETHandleException']);
    }

    /**
     * Create request for operation 'getCustomObjectsUsingGET'
     *
     * @param  string $custom_object_name Name of custom object type to retrieve records for (required)
     * @param  string $filter_type Field to filter on. Searchable fields can be retrieved with Describe Custom Object (required)
     * @param  string[] $filter_values Comma-separated list of field values to match against. (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\LookupCustomObjectRequest $custom_object_lookup_request Optional JSON request for retrieving custom objects with compound keys.  Example:&lt;br&gt;&lt;code&gt;{&lt;br&gt;\&quot;filterType\&quot;:\&quot;dedupeFields\&quot;,&lt;br&gt;\&quot;fields\&quot;:[&lt;br&gt;\&quot;marketoGuid\&quot;,&lt;br&gt;\&quot;Bedrooms\&quot;,&lt;br&gt;\&quot;yearBuilt\&quot;&lt;br&gt;],&lt;br&gt;\&quot;input\&quot;:[&lt;br&gt;{&lt;br&gt;\&quot;mlsNum\&quot;:\&quot;1962352\&quot;,&lt;br&gt;\&quot;houseOwnerId\&quot;:\&quot;42645756\&quot;&lt;br&gt;},&lt;br&gt;{&lt;br&gt;\&quot;mlsNum\&quot;:\&quot;3962352\&quot;,&lt;br&gt;\&quot;houseOwnerId\&quot;:\&quot;62645756\&quot;&lt;br&gt;}&lt;br&gt;]&lt;br&gt;}&lt;/code&gt;&lt;br&gt; (optional)
     * @param  string[] $fields Comma-separated list of fields to return for each record.  If unset marketoGuid, dedupeFields, updatedAt, createdAt will be returned (optional)
     * @param  int $batch_size The batch size to return.  The max and default value is 300. (optional)
     * @param  string $next_page_token A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter.  See Paging Tokens for more info. (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function getCustomObjectsUsingGETRequest(
        string $custom_object_name,
        string $filter_type,
        array $filter_values,
        \NecLimDul\MarketoRest\Lead\Model\LookupCustomObjectRequest $custom_object_lookup_request = null,
        array $fields = null,
        int $batch_size = null,
        string $next_page_token = null
    ): Request
    {
        // Verify the required parameter 'filter_values' is set.
        if (empty($filter_values)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $filter_values when calling getCustomObjectsUsingGET'
            );
        }

        $resourcePath = '/rest/v1/customobjects/{customObjectName}.json';
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';

        // Query parameters.
        $queryParams['filterType'] = ObjectSerializer::toQueryValue($filter_type);
        $queryParams['filterValues'] = ObjectSerializer::toQueryValue($filter_values);
        $queryParams['fields'] = ObjectSerializer::toQueryValue($fields);
        $queryParams['batchSize'] = ObjectSerializer::toQueryValue($batch_size);
        $queryParams['nextPageToken'] = ObjectSerializer::toQueryValue($next_page_token);
        // Remove any null (optional values).
        $queryParams = array_filter($queryParams, function($v) { return $v !== null; });

        // Path parameters.
        $resourcePath = str_replace(
            '{' . 'customObjectName' . '}',
            ObjectSerializer::toPathValue($custom_object_name),
            $resourcePath
        );
        $headers = $this->headerSelector->selectHeaders(
            ['application/json'],
            ['application/json']
        );
        // for model (json/xml)
        if (!empty($custom_object_lookup_request)) {
            $httpBody = ObjectSerializer::toBodyValue($custom_object_lookup_request, $headers['Content-Type'] === 'application/json');
        }


        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = Query::build($queryParams);
        return new Request(
            'GET',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Exception handler for listCustomObjectTypesUsingGET.
     *
     * @param \NecLimDul\MarketoRest\Lead\ApiException $e Unprocessed exception.
     *
     * @return \NecLimDul\MarketoRest\Lead\ApiException Processed exception.
     */
    protected function listCustomObjectTypesUsingGETHandleException(ApiException $e)
    {
        switch ($e->getCode()) {
            case 200:
                $e->setResponseObject(
                    $this->deserializeResponseBody(
                        $e->getResponseBody(),
                        '\NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectMetaData',
                        $e->getResponseHeaders()
                    )
                );
                break;
        }
        return $e;
    }

    /**
     * List Custom Object Types
     *
     * @param  string[] $names Comma-separated list of API names of custom object types to filter on (optional)
     * @param  string $state State of custom object type to filter on.  By default, if an approved version exists, it is returned.  Otherwise, the draft version is returned. (optional)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectMetaData
     */
    public function listCustomObjectTypesUsingGET($names = null, $state = null)
    {
        list($response) = $this->listCustomObjectTypesUsingGETWithHttpInfo($names, $state);
        return $response;
    }

    /**
     * List Custom Object Types
     *
     * @param  string[] $names Comma-separated list of API names of custom object types to filter on (optional)
     * @param  string $state State of custom object type to filter on.  By default, if an approved version exists, it is returned.  Otherwise, the draft version is returned. (optional)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectMetaData, HTTP status code, HTTP response headers (array of strings)
     */
    public function listCustomObjectTypesUsingGETWithHttpInfo($names = null, $state = null)
    {
        $request = $this->listCustomObjectTypesUsingGETRequest($names, $state);
        try {
            $response = $this->makeRequest($request);
            return $this->responseToReturn($response, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectMetaData');
        } catch (ApiException $e) {
            throw $this->listCustomObjectTypesUsingGETHandleException($e);
        }
    }

    /**
     * List Custom Object Types
     *
     * @param  string[] $names Comma-separated list of API names of custom object types to filter on (optional)
     * @param  string $state State of custom object type to filter on.  By default, if an approved version exists, it is returned.  Otherwise, the draft version is returned. (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listCustomObjectTypesUsingGETAsync($names = null, $state = null)
    {
        return $this->listCustomObjectTypesUsingGETAsyncWithHttpInfo($names, $state)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * List Custom Object Types
     *
     * @param  string[] $names Comma-separated list of API names of custom object types to filter on (optional)
     * @param  string $state State of custom object type to filter on.  By default, if an approved version exists, it is returned.  Otherwise, the draft version is returned. (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listCustomObjectTypesUsingGETAsyncWithHttpInfo($names = null, $state = null)
    {
        $request = $this->listCustomObjectTypesUsingGETRequest($names, $state);
        return $this->makeAsyncRequest($request, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectMetaData', [$this, 'listCustomObjectTypesUsingGETHandleException']);
    }

    /**
     * Create request for operation 'listCustomObjectTypesUsingGET'
     *
     * @param  string[] $names Comma-separated list of API names of custom object types to filter on (optional)
     * @param  string $state State of custom object type to filter on.  By default, if an approved version exists, it is returned.  Otherwise, the draft version is returned. (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function listCustomObjectTypesUsingGETRequest(
        array $names = null,
        string $state = null
    ): Request
    {

        $resourcePath = '/rest/v1/customobjects/schema.json';
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';

        // Query parameters.
        $queryParams['names'] = ObjectSerializer::toQueryValue($names);
        $queryParams['state'] = ObjectSerializer::toQueryValue($state);
        // Remove any null (optional values).
        $queryParams = array_filter($queryParams, function($v) { return $v !== null; });
        $headers = $this->headerSelector->selectHeaders(
            ['application/json'],
            ['application/json']
        );


        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = Query::build($queryParams);
        return new Request(
            'GET',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Exception handler for listCustomObjectsUsingGET.
     *
     * @param \NecLimDul\MarketoRest\Lead\ApiException $e Unprocessed exception.
     *
     * @return \NecLimDul\MarketoRest\Lead\ApiException Processed exception.
     */
    protected function listCustomObjectsUsingGETHandleException(ApiException $e)
    {
        switch ($e->getCode()) {
            case 200:
                $e->setResponseObject(
                    $this->deserializeResponseBody(
                        $e->getResponseBody(),
                        '\NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectMetaData',
                        $e->getResponseHeaders()
                    )
                );
                break;
        }
        return $e;
    }

    /**
     * List Custom Objects
     *
     * @param  string[] $names Comma-separated list of names to filter types on (optional)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectMetaData
     */
    public function listCustomObjectsUsingGET($names = null)
    {
        list($response) = $this->listCustomObjectsUsingGETWithHttpInfo($names);
        return $response;
    }

    /**
     * List Custom Objects
     *
     * @param  string[] $names Comma-separated list of names to filter types on (optional)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectMetaData, HTTP status code, HTTP response headers (array of strings)
     */
    public function listCustomObjectsUsingGETWithHttpInfo($names = null)
    {
        $request = $this->listCustomObjectsUsingGETRequest($names);
        try {
            $response = $this->makeRequest($request);
            return $this->responseToReturn($response, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectMetaData');
        } catch (ApiException $e) {
            throw $this->listCustomObjectsUsingGETHandleException($e);
        }
    }

    /**
     * List Custom Objects
     *
     * @param  string[] $names Comma-separated list of names to filter types on (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listCustomObjectsUsingGETAsync($names = null)
    {
        return $this->listCustomObjectsUsingGETAsyncWithHttpInfo($names)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * List Custom Objects
     *
     * @param  string[] $names Comma-separated list of names to filter types on (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function listCustomObjectsUsingGETAsyncWithHttpInfo($names = null)
    {
        $request = $this->listCustomObjectsUsingGETRequest($names);
        return $this->makeAsyncRequest($request, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfObjectMetaData', [$this, 'listCustomObjectsUsingGETHandleException']);
    }

    /**
     * Create request for operation 'listCustomObjectsUsingGET'
     *
     * @param  string[] $names Comma-separated list of names to filter types on (optional)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function listCustomObjectsUsingGETRequest(
        array $names = null
    ): Request
    {

        $resourcePath = '/rest/v1/customobjects.json';
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';

        // Query parameters.
        $queryParams['names'] = ObjectSerializer::toQueryValue($names);
        // Remove any null (optional values).
        $queryParams = array_filter($queryParams, function($v) { return $v !== null; });
        $headers = $this->headerSelector->selectHeaders(
            ['application/json'],
            ['application/json']
        );


        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = Query::build($queryParams);
        return new Request(
            'GET',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Exception handler for syncCustomObjectTypeUsingPOST.
     *
     * @param \NecLimDul\MarketoRest\Lead\ApiException $e Unprocessed exception.
     *
     * @return \NecLimDul\MarketoRest\Lead\ApiException Processed exception.
     */
    protected function syncCustomObjectTypeUsingPOSTHandleException(ApiException $e)
    {
        switch ($e->getCode()) {
            case 200:
                $e->setResponseObject(
                    $this->deserializeResponseBody(
                        $e->getResponseBody(),
                        '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType',
                        $e->getResponseHeaders()
                    )
                );
                break;
        }
        return $e;
    }

    /**
     * Sync Custom Object Type
     *
     * @param  \NecLimDul\MarketoRest\Lead\Model\SyncCustomObjectTypeRequest $sync_custom_object_type_request JSON object containing custom object type attributes (required)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType
     */
    public function syncCustomObjectTypeUsingPOST($sync_custom_object_type_request)
    {
        list($response) = $this->syncCustomObjectTypeUsingPOSTWithHttpInfo($sync_custom_object_type_request);
        return $response;
    }

    /**
     * Sync Custom Object Type
     *
     * @param  \NecLimDul\MarketoRest\Lead\Model\SyncCustomObjectTypeRequest $sync_custom_object_type_request JSON object containing custom object type attributes (required)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType, HTTP status code, HTTP response headers (array of strings)
     */
    public function syncCustomObjectTypeUsingPOSTWithHttpInfo($sync_custom_object_type_request)
    {
        $request = $this->syncCustomObjectTypeUsingPOSTRequest($sync_custom_object_type_request);
        try {
            $response = $this->makeRequest($request);
            return $this->responseToReturn($response, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType');
        } catch (ApiException $e) {
            throw $this->syncCustomObjectTypeUsingPOSTHandleException($e);
        }
    }

    /**
     * Sync Custom Object Type
     *
     * @param  \NecLimDul\MarketoRest\Lead\Model\SyncCustomObjectTypeRequest $sync_custom_object_type_request JSON object containing custom object type attributes (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function syncCustomObjectTypeUsingPOSTAsync($sync_custom_object_type_request)
    {
        return $this->syncCustomObjectTypeUsingPOSTAsyncWithHttpInfo($sync_custom_object_type_request)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Sync Custom Object Type
     *
     * @param  \NecLimDul\MarketoRest\Lead\Model\SyncCustomObjectTypeRequest $sync_custom_object_type_request JSON object containing custom object type attributes (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function syncCustomObjectTypeUsingPOSTAsyncWithHttpInfo($sync_custom_object_type_request)
    {
        $request = $this->syncCustomObjectTypeUsingPOSTRequest($sync_custom_object_type_request);
        return $this->makeAsyncRequest($request, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType', [$this, 'syncCustomObjectTypeUsingPOSTHandleException']);
    }

    /**
     * Create request for operation 'syncCustomObjectTypeUsingPOST'
     *
     * @param  \NecLimDul\MarketoRest\Lead\Model\SyncCustomObjectTypeRequest $sync_custom_object_type_request JSON object containing custom object type attributes (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function syncCustomObjectTypeUsingPOSTRequest(
        \NecLimDul\MarketoRest\Lead\Model\SyncCustomObjectTypeRequest $sync_custom_object_type_request
    ): Request
    {

        $resourcePath = '/rest/v1/customobjects/schema.json';
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $headers = $this->headerSelector->selectHeaders(
            ['application/json'],
            ['application/json']
        );
        $httpBody = ObjectSerializer::toBodyValue($sync_custom_object_type_request, $headers['Content-Type'] === 'application/json');


        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = Query::build($queryParams);
        return new Request(
            'POST',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Exception handler for syncCustomObjectsUsingPOST.
     *
     * @param \NecLimDul\MarketoRest\Lead\ApiException $e Unprocessed exception.
     *
     * @return \NecLimDul\MarketoRest\Lead\ApiException Processed exception.
     */
    protected function syncCustomObjectsUsingPOSTHandleException(ApiException $e)
    {
        switch ($e->getCode()) {
            case 200:
                $e->setResponseObject(
                    $this->deserializeResponseBody(
                        $e->getResponseBody(),
                        '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject',
                        $e->getResponseHeaders()
                    )
                );
                break;
        }
        return $e;
    }

    /**
     * Sync Custom Objects
     *
     * @param  string $custom_object_name customObjectName (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\SyncCustomObjectRequest $sync_custom_object_request syncCustomObjectRequest (required)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject
     */
    public function syncCustomObjectsUsingPOST($custom_object_name, $sync_custom_object_request)
    {
        list($response) = $this->syncCustomObjectsUsingPOSTWithHttpInfo($custom_object_name, $sync_custom_object_request);
        return $response;
    }

    /**
     * Sync Custom Objects
     *
     * @param  string $custom_object_name customObjectName (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\SyncCustomObjectRequest $sync_custom_object_request syncCustomObjectRequest (required)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject, HTTP status code, HTTP response headers (array of strings)
     */
    public function syncCustomObjectsUsingPOSTWithHttpInfo($custom_object_name, $sync_custom_object_request)
    {
        $request = $this->syncCustomObjectsUsingPOSTRequest($custom_object_name, $sync_custom_object_request);
        try {
            $response = $this->makeRequest($request);
            return $this->responseToReturn($response, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject');
        } catch (ApiException $e) {
            throw $this->syncCustomObjectsUsingPOSTHandleException($e);
        }
    }

    /**
     * Sync Custom Objects
     *
     * @param  string $custom_object_name customObjectName (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\SyncCustomObjectRequest $sync_custom_object_request syncCustomObjectRequest (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function syncCustomObjectsUsingPOSTAsync($custom_object_name, $sync_custom_object_request)
    {
        return $this->syncCustomObjectsUsingPOSTAsyncWithHttpInfo($custom_object_name, $sync_custom_object_request)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Sync Custom Objects
     *
     * @param  string $custom_object_name customObjectName (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\SyncCustomObjectRequest $sync_custom_object_request syncCustomObjectRequest (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function syncCustomObjectsUsingPOSTAsyncWithHttpInfo($custom_object_name, $sync_custom_object_request)
    {
        $request = $this->syncCustomObjectsUsingPOSTRequest($custom_object_name, $sync_custom_object_request);
        return $this->makeAsyncRequest($request, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObject', [$this, 'syncCustomObjectsUsingPOSTHandleException']);
    }

    /**
     * Create request for operation 'syncCustomObjectsUsingPOST'
     *
     * @param  string $custom_object_name customObjectName (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\SyncCustomObjectRequest $sync_custom_object_request syncCustomObjectRequest (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function syncCustomObjectsUsingPOSTRequest(
        string $custom_object_name,
        \NecLimDul\MarketoRest\Lead\Model\SyncCustomObjectRequest $sync_custom_object_request
    ): Request
    {

        $resourcePath = '/rest/v1/customobjects/{customObjectName}.json';
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';

        // Path parameters.
        $resourcePath = str_replace(
            '{' . 'customObjectName' . '}',
            ObjectSerializer::toPathValue($custom_object_name),
            $resourcePath
        );
        $headers = $this->headerSelector->selectHeaders(
            ['application/json'],
            ['application/json']
        );
        $httpBody = ObjectSerializer::toBodyValue($sync_custom_object_request, $headers['Content-Type'] === 'application/json');


        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = Query::build($queryParams);
        return new Request(
            'POST',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Exception handler for updateCustomObjectTypeFieldUsingPOST.
     *
     * @param \NecLimDul\MarketoRest\Lead\ApiException $e Unprocessed exception.
     *
     * @return \NecLimDul\MarketoRest\Lead\ApiException Processed exception.
     */
    protected function updateCustomObjectTypeFieldUsingPOSTHandleException(ApiException $e)
    {
        switch ($e->getCode()) {
            case 200:
                $e->setResponseObject(
                    $this->deserializeResponseBody(
                        $e->getResponseBody(),
                        '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType',
                        $e->getResponseHeaders()
                    )
                );
                break;
        }
        return $e;
    }

    /**
     * Update Custom Object Type Field
     *
     * @param  string $api_name API name of custom object type (required)
     * @param  string $field_api_name API name of custom object type field (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\UpdateCustomObjectTypeFieldRequest $update_custom_object_type_field_request JSON object containing custom object type fields (required)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType
     */
    public function updateCustomObjectTypeFieldUsingPOST($api_name, $field_api_name, $update_custom_object_type_field_request)
    {
        list($response) = $this->updateCustomObjectTypeFieldUsingPOSTWithHttpInfo($api_name, $field_api_name, $update_custom_object_type_field_request);
        return $response;
    }

    /**
     * Update Custom Object Type Field
     *
     * @param  string $api_name API name of custom object type (required)
     * @param  string $field_api_name API name of custom object type field (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\UpdateCustomObjectTypeFieldRequest $update_custom_object_type_field_request JSON object containing custom object type fields (required)
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType, HTTP status code, HTTP response headers (array of strings)
     */
    public function updateCustomObjectTypeFieldUsingPOSTWithHttpInfo($api_name, $field_api_name, $update_custom_object_type_field_request)
    {
        $request = $this->updateCustomObjectTypeFieldUsingPOSTRequest($api_name, $field_api_name, $update_custom_object_type_field_request);
        try {
            $response = $this->makeRequest($request);
            return $this->responseToReturn($response, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType');
        } catch (ApiException $e) {
            throw $this->updateCustomObjectTypeFieldUsingPOSTHandleException($e);
        }
    }

    /**
     * Update Custom Object Type Field
     *
     * @param  string $api_name API name of custom object type (required)
     * @param  string $field_api_name API name of custom object type field (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\UpdateCustomObjectTypeFieldRequest $update_custom_object_type_field_request JSON object containing custom object type fields (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function updateCustomObjectTypeFieldUsingPOSTAsync($api_name, $field_api_name, $update_custom_object_type_field_request)
    {
        return $this->updateCustomObjectTypeFieldUsingPOSTAsyncWithHttpInfo($api_name, $field_api_name, $update_custom_object_type_field_request)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Update Custom Object Type Field
     *
     * @param  string $api_name API name of custom object type (required)
     * @param  string $field_api_name API name of custom object type field (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\UpdateCustomObjectTypeFieldRequest $update_custom_object_type_field_request JSON object containing custom object type fields (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function updateCustomObjectTypeFieldUsingPOSTAsyncWithHttpInfo($api_name, $field_api_name, $update_custom_object_type_field_request)
    {
        $request = $this->updateCustomObjectTypeFieldUsingPOSTRequest($api_name, $field_api_name, $update_custom_object_type_field_request);
        return $this->makeAsyncRequest($request, '\NecLimDul\MarketoRest\Lead\Model\ResponseOfCustomObjectType', [$this, 'updateCustomObjectTypeFieldUsingPOSTHandleException']);
    }

    /**
     * Create request for operation 'updateCustomObjectTypeFieldUsingPOST'
     *
     * @param  string $api_name API name of custom object type (required)
     * @param  string $field_api_name API name of custom object type field (required)
     * @param  \NecLimDul\MarketoRest\Lead\Model\UpdateCustomObjectTypeFieldRequest $update_custom_object_type_field_request JSON object containing custom object type fields (required)
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function updateCustomObjectTypeFieldUsingPOSTRequest(
        string $api_name,
        string $field_api_name,
        \NecLimDul\MarketoRest\Lead\Model\UpdateCustomObjectTypeFieldRequest $update_custom_object_type_field_request
    ): Request
    {

        $resourcePath = '/rest/v1/customobjects/schema/{apiName}/{fieldApiName}/updateField.json';
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';

        // Path parameters.
        $resourcePath = str_replace(
            '{' . 'apiName' . '}',
            ObjectSerializer::toPathValue($api_name),
            $resourcePath
        );
        $resourcePath = str_replace(
            '{' . 'fieldApiName' . '}',
            ObjectSerializer::toPathValue($field_api_name),
            $resourcePath
        );
        $headers = $this->headerSelector->selectHeaders(
            ['application/json'],
            ['application/json']
        );
        $httpBody = ObjectSerializer::toBodyValue($update_custom_object_type_field_request, $headers['Content-Type'] === 'application/json');


        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = Query::build($queryParams);
        return new Request(
            'POST',
            $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Create http client option
     *
     * @throws \RuntimeException on file opening failure
     * @return array of http client options
     */
    protected function createHttpClientOption()
    {
        $options = [];
        if ($this->config->getDebug()) {
            $options[RequestOptions::DEBUG] = fopen($this->config->getDebugFile(), 'a');
            if (!$options[RequestOptions::DEBUG]) {
                throw new \RuntimeException('Failed to open the debug file: ' . $this->config->getDebugFile());
            }
        }

        return $options;
    }

    /**
     * Make a request.
     *
     * @param \GuzzleHttp\Psr7\Request $request An initialized request object.
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @return \Psr\Http\Message\ResponseInterface
     */
    private function makeRequest(Request $request) {
        $options = $this->createHttpClientOption();
        try {
           $response = $this->client->send($request, $options);
        } catch (RequestException $e) {
            $response = $e->getResponse();
            throw new ApiException(
                "[{$e->getCode()}] {$e->getMessage()}",
                (int) $e->getCode(),
                $response ? $response->getHeaders() : null,
                $response ? (string) $response->getBody() : null
            );
        }

        $statusCode = $response->getStatusCode();
        if ($statusCode < 200 || $statusCode > 299) {
            throw new ApiException(
                sprintf(
                    '[%d] Error connecting to the API (%s)',
                    $statusCode,
                    (string) $request->getUri()
                ),
                $statusCode,
                $response->getHeaders(),
                (string) $response->getBody()
            );
        }
        return $response;
    }

    /**
     * Make an async request.
     *
     * @param \GuzzleHttp\Psr7\Request $request An initialized request object.
     * @param string $returnType The return type.
     * @param callable $exceptionHandler A callback to process HTTP errors.
     *
     * @throws \NecLimDul\MarketoRest\Lead\ApiException on non-2xx response
     * @return \GuzzleHttp\Promise\PromiseInterface A promise that will return a processed response.
     */
    private function makeAsyncRequest(Request $request, string $returnType, callable $exceptionHandler)
    {
        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    return $this->responseToReturn($response, $returnType);
                },
                function (RequestException $exception) use ($exceptionHandler) {
                    $response = $exception->getResponse();
                    $e = new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $response ? $response->getStatusCode() : 0,
                            (string) $exception->getRequest()->getUri()
                        ),
                        (int) $exception->getCode(),
                        $response ? $response->getHeaders() : null,
                        $response ? (string) $response->getBody() : null
                    );
                    throw $exceptionHandler($e);
                }
            );
    }

    /**
     * Convert a response to a return standard return array.
     *
     * @param \Psr\Http\Message\ResponseInterface $response A response from a request with a serialized body.
     * @param string $returnType The primary return type.
     *
     * @return array
     */
    private function responseToReturn(ResponseInterface $response, string $returnType) {
        return [
            $this->deserializeResponseBody($response->getBody(), $returnType),
            $response->getStatusCode(),
            $response->getHeaders()
        ];
    }

    /**
     * Deserialize a response body.
     *
     * @param mixed $responseBody
     *   The response body.
     * @param string $returnType
     *   The return type.
     * @param array<string, string[]>|null $headers
     *   The a list of headers from the response.
     * @return mixed
     *   Either a string or a stream to be passed to a file object.
     */
    private function deserializeResponseBody($responseBody, string $returnType, ?array $headers = [])
    {
        return ObjectSerializer::deserialize(
            $returnType === '\SplFileObject' ? $responseBody : (string) $responseBody,
            $returnType,
            $headers
        );
    }

}
