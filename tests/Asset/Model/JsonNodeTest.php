<?php
/**
 * JsonNodeTest
 *
 * PHP version 7
 *
 * @category Class
 * @package  NecLimDul\MarketoRest\Asset
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Marketo Rest API
 *
 * Marketo Rest API
 *
 * OpenAPI spec version: 1.0
 * Contact: developerfeedback@marketo.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.3.4
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

// namespace NecLimDul\MarketoRest\Asset;
namespace NecLimDul\MarketoRest\Asset\Model;

use PHPUnit\Framework\TestCase;

/**
 * JsonNodeTest Class Doc Comment
 *
 * @category    Class
 * @description JsonNode
 * @package     NecLimDul\MarketoRest\Asset
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class JsonNodeTest extends TestCase
{

    /**
     * Test "JsonNode"
     */
    public function testJsonNode()
    {
        $class = new JsonNode();
        $this->assertTrue(TRUE);
    }

    /**
     * Test attribute "array"
     */
    public function testPropertyArray()
    {
        $class = new JsonNode();
        $this->assertTrue(TRUE);
    }

    /**
     * Test attribute "big_decimal"
     */
    public function testPropertyBigDecimal()
    {
        $class = new JsonNode();
        $this->assertTrue(TRUE);
    }

    /**
     * Test attribute "big_integer"
     */
    public function testPropertyBigInteger()
    {
        $class = new JsonNode();
        $this->assertTrue(TRUE);
    }

    /**
     * Test attribute "binary"
     */
    public function testPropertyBinary()
    {
        $class = new JsonNode();
        $this->assertTrue(TRUE);
    }

    /**
     * Test attribute "boolean"
     */
    public function testPropertyBoolean()
    {
        $class = new JsonNode();
        $this->assertTrue(TRUE);
    }

    /**
     * Test attribute "container_node"
     */
    public function testPropertyContainerNode()
    {
        $class = new JsonNode();
        $this->assertTrue(TRUE);
    }

    /**
     * Test attribute "double"
     */
    public function testPropertyDouble()
    {
        $class = new JsonNode();
        $this->assertTrue(TRUE);
    }

    /**
     * Test attribute "float"
     */
    public function testPropertyFloat()
    {
        $class = new JsonNode();
        $this->assertTrue(TRUE);
    }

    /**
     * Test attribute "floating_point_number"
     */
    public function testPropertyFloatingPointNumber()
    {
        $class = new JsonNode();
        $this->assertTrue(TRUE);
    }

    /**
     * Test attribute "int"
     */
    public function testPropertyInt()
    {
        $class = new JsonNode();
        $this->assertTrue(TRUE);
    }

    /**
     * Test attribute "integral_number"
     */
    public function testPropertyIntegralNumber()
    {
        $class = new JsonNode();
        $this->assertTrue(TRUE);
    }

    /**
     * Test attribute "long"
     */
    public function testPropertyLong()
    {
        $class = new JsonNode();
        $this->assertTrue(TRUE);
    }

    /**
     * Test attribute "missing_node"
     */
    public function testPropertyMissingNode()
    {
        $class = new JsonNode();
        $this->assertTrue(TRUE);
    }

    /**
     * Test attribute "node_type"
     */
    public function testPropertyNodeType()
    {
        $class = new JsonNode();
        $this->assertTrue(TRUE);
    }

    /**
     * Test attribute "null"
     */
    public function testPropertyNull()
    {
        $class = new JsonNode();
        $this->assertTrue(TRUE);
    }

    /**
     * Test attribute "number"
     */
    public function testPropertyNumber()
    {
        $class = new JsonNode();
        $this->assertTrue(TRUE);
    }

    /**
     * Test attribute "object"
     */
    public function testPropertyObject()
    {
        $class = new JsonNode();
        $this->assertTrue(TRUE);
    }

    /**
     * Test attribute "pojo"
     */
    public function testPropertyPojo()
    {
        $class = new JsonNode();
        $this->assertTrue(TRUE);
    }

    /**
     * Test attribute "short"
     */
    public function testPropertyShort()
    {
        $class = new JsonNode();
        $this->assertTrue(TRUE);
    }

    /**
     * Test attribute "textual"
     */
    public function testPropertyTextual()
    {
        $class = new JsonNode();
        $this->assertTrue(TRUE);
    }

    /**
     * Test attribute "value_node"
     */
    public function testPropertyValueNode()
    {
        $class = new JsonNode();
        $this->assertTrue(TRUE);
    }
}
