<?php
/**
 * FormsApiTest
 *
 * Marketo Rest API
 *
 * Marketo Rest API
 *
 * OpenAPI spec version: 1.0
 * Contact: developerfeedback@marketo.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.26
 *
 * @category Class
 * @package  NecLimDul\MarketoRest\Asset
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace NecLimDul\MarketoRest\Asset\Test\Api;

use NecLimDul\MarketoRest\Asset\Configuration;
use NecLimDul\MarketoRest\Asset\ApiException;
use NecLimDul\MarketoRest\Asset\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * FormsApiTest Class Doc Comment
 *
 * @category Class
 * @package  NecLimDul\MarketoRest\Asset
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 * @coversDefaultClass \NecLimDul\MarketoRest\Asset\Api\FormsApi
 */
class FormsApiTest extends TestCase
{


    /**
     * Approve Form Draft.
     *
     * @covers ::approveFromUsingPOST
     */
    public function testApproveFromUsingPOST(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Get Forms.
     *
     * @covers ::browseForms2UsingGET
     */
    public function testBrowseForms2UsingGET(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Clone Form.
     *
     * @covers ::cloneLpFormsUsingPOST
     */
    public function testCloneLpFormsUsingPOST(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Create Form.
     *
     * @covers ::createLpFormsUsingPOST
     */
    public function testCreateLpFormsUsingPOST(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Delete Form.
     *
     * @covers ::deleteFormByIdUsingPOST
     */
    public function testDeleteFormByIdUsingPOST(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Discard Form Draft.
     *
     * @covers ::discardFormByIdUsingPOST
     */
    public function testDiscardFormByIdUsingPOST(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Get Form Used By.
     *
     * @covers ::getFormUsedByUsingGET
     */
    public function testGetFormUsedByUsingGET(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Get Form By Id.
     *
     * @covers ::getLpFormByIdUsingGET
     */
    public function testGetLpFormByIdUsingGET(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Get Form by Name.
     *
     * @covers ::getLpFormByNameUsingGET
     */
    public function testGetLpFormByNameUsingGET(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Get Thank You Page by Form Id.
     *
     * @covers ::getThankYouPageByIdUsingGET
     */
    public function testGetThankYouPageByIdUsingGET(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Update Submit Button.
     *
     * @covers ::updateFormSubmitButtonUsingPOST
     */
    public function testUpdateFormSubmitButtonUsingPOST(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Update Form Metadata.
     *
     * @covers ::updateFormsUsingPOST
     */
    public function testUpdateFormsUsingPOST(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Update Thank You Page.
     *
     * @covers ::updateThankYouPageByIdUsingPOST
     */
    public function testUpdateThankYouPageByIdUsingPOST(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
