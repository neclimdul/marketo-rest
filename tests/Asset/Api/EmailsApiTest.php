<?php
/**
 * EmailsApiTest
 * PHP version 5
 *
 * @category Class
 * @package  NecLimDul\MarketoRest\Asset
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Marketo Rest API
 *
 * Marketo Rest API
 *
 * OpenAPI spec version: 1.0
 * Contact: developerfeedback@marketo.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.14
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

// namespace NecLimDul\MarketoRest\Asset;
namespace NecLimDul\MarketoRest\Asset\Model;

use PHPUnit\Framework\TestCase;

use \NecLimDul\MarketoRest\Asset\Configuration;
use \NecLimDul\MarketoRest\Asset\ApiException;
use \NecLimDul\MarketoRest\Asset\ObjectSerializer;

/**
 * EmailsApiTest Class Doc Comment
 *
 * @category Class
 * @package  NecLimDul\MarketoRest\Asset
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class EmailsApiTest extends TestCase
{


    /**
     * Test case for addModuleUsingPOST
     *
     * Add Email Module.
     *
     */
    public function testAddModuleUsingPOST()
    {
        //$class = new EmailsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for approveDraftUsingPOST
     *
     * Approve Email Draft.
     *
     */
    public function testApproveDraftUsingPOST()
    {
        //$class = new EmailsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for cloneEmailUsingPOST
     *
     * Clone Email.
     *
     */
    public function testCloneEmailUsingPOST()
    {
        //$class = new EmailsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for createEmailFullContentUsingPOST
     *
     * Update Email Full Content.
     *
     */
    public function testCreateEmailFullContentUsingPOST()
    {
        //$class = new EmailsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for createEmailUsingPOST
     *
     * Create Email.
     *
     */
    public function testCreateEmailUsingPOST()
    {
        //$class = new EmailsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for deleteEmailUsingPOST
     *
     * Delete Email.
     *
     */
    public function testDeleteEmailUsingPOST()
    {
        //$class = new EmailsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for deleteModuleUsingPOST
     *
     * Delete Module.
     *
     */
    public function testDeleteModuleUsingPOST()
    {
        //$class = new EmailsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for discardDraftUsingPOST
     *
     * Discard Email Draft.
     *
     */
    public function testDiscardDraftUsingPOST()
    {
        //$class = new EmailsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for duplicateModuleUsingPOST
     *
     * Duplicate Email Module.
     *
     */
    public function testDuplicateModuleUsingPOST()
    {
        //$class = new EmailsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for getEmailByIdUsingGET
     *
     * Get Email By Id.
     *
     */
    public function testGetEmailByIdUsingGET()
    {
        //$class = new EmailsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for getEmailByNameUsingGET
     *
     * Get Email by Name.
     *
     */
    public function testGetEmailByNameUsingGET()
    {
        //$class = new EmailsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for getEmailCCFieldsUsingGET
     *
     * Get Email CC Fields.
     *
     */
    public function testGetEmailCCFieldsUsingGET()
    {
        //$class = new EmailsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for getEmailContentByIdUsingGET
     *
     * Get Email Content.
     *
     */
    public function testGetEmailContentByIdUsingGET()
    {
        //$class = new EmailsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for getEmailDynamicContentUsingGET
     *
     * Get Email Dynamic Content.
     *
     */
    public function testGetEmailDynamicContentUsingGET()
    {
        //$class = new EmailsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for getEmailFullContentUsingGET
     *
     * Get Email Full Content.
     *
     */
    public function testGetEmailFullContentUsingGET()
    {
        //$class = new EmailsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for getEmailUsingGET
     *
     * Get Emails.
     *
     */
    public function testGetEmailUsingGET()
    {
        //$class = new EmailsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for getEmailVariablesUsingGET
     *
     * Get Email Variables.
     *
     */
    public function testGetEmailVariablesUsingGET()
    {
        //$class = new EmailsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for rearrangeModulesUsingPOST
     *
     * Rearrange Email Modules.
     *
     */
    public function testRearrangeModulesUsingPOST()
    {
        //$class = new EmailsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for renameUsingPOST
     *
     * Rename Email Module.
     *
     */
    public function testRenameUsingPOST()
    {
        //$class = new EmailsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for sendSampleEmailUsingPOST
     *
     * Send Sample Email.
     *
     */
    public function testSendSampleEmailUsingPOST()
    {
        //$class = new EmailsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for unapproveDraftUsingPOST
     *
     * Unapprove Email.
     *
     */
    public function testUnapproveDraftUsingPOST()
    {
        //$class = new EmailsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for updateEmailComponentContentUsingPOST
     *
     * Update Email Content Section.
     *
     */
    public function testUpdateEmailComponentContentUsingPOST()
    {
        //$class = new EmailsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for updateEmailContentUsingPOST
     *
     * Update Email Content.
     *
     */
    public function testUpdateEmailContentUsingPOST()
    {
        //$class = new EmailsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for updateEmailDynamicContentUsingPOST
     *
     * Update Email Dynamic Content Section.
     *
     */
    public function testUpdateEmailDynamicContentUsingPOST()
    {
        //$class = new EmailsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for updateEmailUsingPOST
     *
     * Update Email Metadata.
     *
     */
    public function testUpdateEmailUsingPOST()
    {
        //$class = new EmailsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for updateVariableUsingPOST
     *
     * Update Email Variable.
     *
     */
    public function testUpdateVariableUsingPOST()
    {
        //$class = new EmailsApi;
        $this->assertTrue(TRUE);
    }
}
