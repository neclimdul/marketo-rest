<?php
/**
 * SmartCampaignsApiTest
 *
 * @category Class
 * @package  NecLimDul\MarketoRest\Asset
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Marketo Rest API
 *
 * Marketo Rest API
 *
 * OpenAPI spec version: 1.0
 * Contact: developerfeedback@marketo.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.28
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace NecLimDul\MarketoRest\Asset\Test\Api;

use NecLimDul\MarketoRest\Asset\Configuration;
use NecLimDul\MarketoRest\Asset\ApiException;
use NecLimDul\MarketoRest\Asset\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * SmartCampaignsApiTest Class Doc Comment
 *
 * @category Class
 * @package  NecLimDul\MarketoRest\Asset
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 * @coversDefaultClass \NecLimDul\MarketoRest\Asset\Api\SmartCampaignsApi
 */
class SmartCampaignsApiTest extends TestCase
{


    /**
     * Activate Smart Campaign.
     *
     * @covers ::activateSmartCampaignUsingPOST
     */
    public function testActivateSmartCampaignUsingPOST()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Clone Smart Campaign.
     *
     * @covers ::cloneSmartCampaignUsingPOST
     */
    public function testCloneSmartCampaignUsingPOST()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Create Smart Campaign.
     *
     * @covers ::createSmartCampaignUsingPOST
     */
    public function testCreateSmartCampaignUsingPOST()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Deactivate Smart Campaign.
     *
     * @covers ::deactivateSmartCampaignUsingPOST
     */
    public function testDeactivateSmartCampaignUsingPOST()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Delete Smart Campaign.
     *
     * @covers ::deleteSmartCampaignUsingPOST
     */
    public function testDeleteSmartCampaignUsingPOST()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Get Smart Campaigns.
     *
     * @covers ::getAllSmartCampaignsGET
     */
    public function testGetAllSmartCampaignsGET()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Get Smart Campaign by Id.
     *
     * @covers ::getSmartCampaignByIdUsingGET
     */
    public function testGetSmartCampaignByIdUsingGET()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Get Smart Campaign by Name.
     *
     * @covers ::getSmartCampaignByNameUsingGET
     */
    public function testGetSmartCampaignByNameUsingGET()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Get Smart List by Smart Campaign Id.
     *
     * @covers ::getSmartListBySmartCampaignIdUsingGET
     */
    public function testGetSmartListBySmartCampaignIdUsingGET()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Update Smart Campaign.
     *
     * @covers ::updateSmartCampaignUsingPOST
     */
    public function testUpdateSmartCampaignUsingPOST()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
