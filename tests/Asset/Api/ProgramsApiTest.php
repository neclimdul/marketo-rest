<?php
/**
 * ProgramsApiTest
 *
 * Marketo Rest API
 *
 * Marketo Rest API
 *
 * OpenAPI spec version: 1.0
 * Contact: developerfeedback@marketo.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.26
 *
 * @category Class
 * @package  NecLimDul\MarketoRest\Asset
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace NecLimDul\MarketoRest\Asset\Test\Api;

use NecLimDul\MarketoRest\Asset\Configuration;
use NecLimDul\MarketoRest\Asset\ApiException;
use NecLimDul\MarketoRest\Asset\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ProgramsApiTest Class Doc Comment
 *
 * @category Class
 * @package  NecLimDul\MarketoRest\Asset
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 * @coversDefaultClass \NecLimDul\MarketoRest\Asset\Api\ProgramsApi
 */
class ProgramsApiTest extends TestCase
{


    /**
     * Approve Program.
     *
     * @covers ::approveProgramUsingPOST
     */
    public function testApproveProgramUsingPOST(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Get Programs.
     *
     * @covers ::browseProgramsUsingGET
     */
    public function testBrowseProgramsUsingGET(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Clone Program.
     *
     * @covers ::cloneProgramUsingPOST
     */
    public function testCloneProgramUsingPOST(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Create Program.
     *
     * @covers ::createProgramUsingPOST
     */
    public function testCreateProgramUsingPOST(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Delete Program.
     *
     * @covers ::deleteProgramUsingPOST
     */
    public function testDeleteProgramUsingPOST(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Get Program by Id.
     *
     * @covers ::getProgramByIdUsingGET
     */
    public function testGetProgramByIdUsingGET(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Get Program by Name.
     *
     * @covers ::getProgramByNameUsingGET
     */
    public function testGetProgramByNameUsingGET(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Get Programs by Tag.
     *
     * @covers ::getProgramListByTagUsingGET
     */
    public function testGetProgramListByTagUsingGET(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Get Smart List by Program Id.
     *
     * @covers ::getSmartListByProgramIdUsingGET
     */
    public function testGetSmartListByProgramIdUsingGET(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Unapprove Program.
     *
     * @covers ::unapproveProgramUsingPOST
     */
    public function testUnapproveProgramUsingPOST(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Update Program Metadata.
     *
     * @covers ::updateProgramUsingPOST
     */
    public function testUpdateProgramUsingPOST(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
