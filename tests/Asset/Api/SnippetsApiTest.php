<?php
/**
 * SnippetsApiTest
 *
 * @category Class
 * @package  NecLimDul\MarketoRest\Asset
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Marketo Rest API
 *
 * Marketo Rest API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: developerfeedback@marketo.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.1.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace NecLimDul\MarketoRest\Asset\Test\Api;

use NecLimDul\MarketoRest\Asset\Configuration;
use NecLimDul\MarketoRest\Asset\ApiException;
use NecLimDul\MarketoRest\Asset\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * SnippetsApiTest Class Doc Comment
 *
 * @category Class
 * @package  NecLimDul\MarketoRest\Asset
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @coversDefaultClass \NecLimDul\MarketoRest\Asset\Api\SnippetsApi
 */
class SnippetsApiTest extends TestCase
{


    /**
     * Approve Snippet Draft.
     *
     * @covers ::approveSnippetUsingPOST
     */
    public function testApproveSnippetUsingPOST()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Clone Snippet.
     *
     * @covers ::cloneSnippetUsingPOST
     */
    public function testCloneSnippetUsingPOST()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Create Snippet.
     *
     * @covers ::createSnippetUsingPOST
     */
    public function testCreateSnippetUsingPOST()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Delete Snippet.
     *
     * @covers ::deleteSnippetUsingPOST
     */
    public function testDeleteSnippetUsingPOST()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Discard Snippet Draft.
     *
     * @covers ::discardSnippetUsingPOST
     */
    public function testDiscardSnippetUsingPOST()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Get Dynamic Content.
     *
     * @covers ::getDynamicContentUsingGET
     */
    public function testGetDynamicContentUsingGET()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Get Snippet by Id.
     *
     * @covers ::getSnippetByIdUsingGET
     */
    public function testGetSnippetByIdUsingGET()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Get Snippet Content.
     *
     * @covers ::getSnippetContentByIdUsingGET
     */
    public function testGetSnippetContentByIdUsingGET()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Get Snippets.
     *
     * @covers ::getSnippetUsingGET
     */
    public function testGetSnippetUsingGET()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Unapprove Snippet.
     *
     * @covers ::unapproveSnippetUsingPOST
     */
    public function testUnapproveSnippetUsingPOST()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Update Snippet Content.
     *
     * @covers ::updateContentUsingPOST1
     */
    public function testUpdateContentUsingPOST1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Update Snippet Dynamic Content.
     *
     * @covers ::updateDynamicContentUsingPOST
     */
    public function testUpdateDynamicContentUsingPOST()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Update Snippet Metadata.
     *
     * @covers ::updateSnippetUsingPOST
     */
    public function testUpdateSnippetUsingPOST()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
