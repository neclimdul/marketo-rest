<?php
/**
 * SnippetsApiTest
 * PHP version 5
 *
 * @category Class
 * @package  NecLimDul\MarketoRest\Asset
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Marketo Rest API
 *
 * Marketo Rest API
 *
 * OpenAPI spec version: 1.0
 * Contact: developerfeedback@marketo.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.3.4
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

// namespace NecLimDul\MarketoRest\Asset;
namespace NecLimDul\MarketoRest\Asset\Model;

use PHPUnit\Framework\TestCase;

use \NecLimDul\MarketoRest\Asset\Configuration;
use \NecLimDul\MarketoRest\Asset\ApiException;
use \NecLimDul\MarketoRest\Asset\ObjectSerializer;

/**
 * SnippetsApiTest Class Doc Comment
 *
 * @category Class
 * @package  NecLimDul\MarketoRest\Asset
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SnippetsApiTest extends TestCase
{


    /**
     * Test case for approveSnippetUsingPOST
     *
     * Approve Snippet Draft.
     *
     */
    public function testApproveSnippetUsingPOST()
    {
        //$class = new SnippetsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for cloneSnippetUsingPOST
     *
     * Clone Snippet.
     *
     */
    public function testCloneSnippetUsingPOST()
    {
        //$class = new SnippetsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for createSnippetUsingPOST
     *
     * Create Snippet.
     *
     */
    public function testCreateSnippetUsingPOST()
    {
        //$class = new SnippetsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for deleteSnippetUsingPOST
     *
     * Delete Snippet.
     *
     */
    public function testDeleteSnippetUsingPOST()
    {
        //$class = new SnippetsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for discardSnippetUsingPOST
     *
     * Discard Snippet Draft.
     *
     */
    public function testDiscardSnippetUsingPOST()
    {
        //$class = new SnippetsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for getDynamicContentUsingGET
     *
     * Get Dynamic Content.
     *
     */
    public function testGetDynamicContentUsingGET()
    {
        //$class = new SnippetsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for getSnippetByIdUsingGET
     *
     * Get Snippet by Id.
     *
     */
    public function testGetSnippetByIdUsingGET()
    {
        //$class = new SnippetsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for getSnippetContentByIdUsingGET
     *
     * Get Snippet Content.
     *
     */
    public function testGetSnippetContentByIdUsingGET()
    {
        //$class = new SnippetsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for getSnippetUsingGET
     *
     * Get Snippets.
     *
     */
    public function testGetSnippetUsingGET()
    {
        //$class = new SnippetsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for unapproveSnippetUsingPOST
     *
     * Unapprove Snippet.
     *
     */
    public function testUnapproveSnippetUsingPOST()
    {
        //$class = new SnippetsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for updateContentUsingPOST1
     *
     * Update Snippet Content.
     *
     */
    public function testUpdateContentUsingPOST1()
    {
        //$class = new SnippetsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for updateDynamicContentUsingPOST
     *
     * Update Snippet Dynamic Content.
     *
     */
    public function testUpdateDynamicContentUsingPOST()
    {
        //$class = new SnippetsApi;
        $this->assertTrue(TRUE);
    }

    /**
     * Test case for updateSnippetUsingPOST
     *
     * Update Snippet Metadata.
     *
     */
    public function testUpdateSnippetUsingPOST()
    {
        //$class = new SnippetsApi;
        $this->assertTrue(TRUE);
    }
}
