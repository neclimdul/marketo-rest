<?php
/**
 * LeadsApiTest
 *
 * Marketo Rest API
 *
 * Marketo Rest API
 *
 * OpenAPI spec version: 1.0
 * Contact: developerfeedback@marketo.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.26
 *
 * @category Class
 * @package  NecLimDul\MarketoRest\Lead
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace NecLimDul\MarketoRest\Lead\Test\Api;

use NecLimDul\MarketoRest\Lead\Configuration;
use NecLimDul\MarketoRest\Lead\ApiException;
use NecLimDul\MarketoRest\Lead\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * LeadsApiTest Class Doc Comment
 *
 * @category Class
 * @package  NecLimDul\MarketoRest\Lead
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 * @coversDefaultClass \NecLimDul\MarketoRest\Lead\Api\LeadsApi
 */
class LeadsApiTest extends TestCase
{


    /**
     * Associate Lead.
     *
     * @covers ::associateLeadUsingPOST
     */
    public function testAssociateLeadUsingPOST(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Change Lead Program Status.
     *
     * @covers ::changeLeadProgramStatusUsingPOST
     */
    public function testChangeLeadProgramStatusUsingPOST(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Create Lead Fields.
     *
     * @covers ::createLeadFieldUsingPOST
     */
    public function testCreateLeadFieldUsingPOST(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Delete Leads.
     *
     * @covers ::deleteLeadsUsingPOST
     */
    public function testDeleteLeadsUsingPOST(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Describe Program Member.
     *
     * @covers ::describeProgramMemberUsingGET
     */
    public function testDescribeProgramMemberUsingGET(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Describe Lead.
     *
     * @covers ::describeUsingGET2
     */
    public function testDescribeUsingGET2(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Describe Lead2.
     *
     * @covers ::describeUsingGET6
     */
    public function testDescribeUsingGET6(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Get Lead by Id.
     *
     * @covers ::getLeadByIdUsingGET
     */
    public function testGetLeadByIdUsingGET(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Get Lead Field by Name.
     *
     * @covers ::getLeadFieldByNameUsingGET
     */
    public function testGetLeadFieldByNameUsingGET(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Get Lead Fields.
     *
     * @covers ::getLeadFieldsUsingGET
     */
    public function testGetLeadFieldsUsingGET(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Get Lead Partitions.
     *
     * @covers ::getLeadPartitionsUsingGET
     */
    public function testGetLeadPartitionsUsingGET(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Get Leads by Filter Type.
     *
     * @covers ::getLeadsByFilterUsingGET
     */
    public function testGetLeadsByFilterUsingGET(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Get Leads by Program Id.
     *
     * @covers ::getLeadsByProgramIdUsingGET
     */
    public function testGetLeadsByProgramIdUsingGET(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Get Lists by Lead Id.
     *
     * @covers ::getListMembershipUsingGET
     */
    public function testGetListMembershipUsingGET(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Get Programs by Lead Id.
     *
     * @covers ::getProgramMembershipUsingGET
     */
    public function testGetProgramMembershipUsingGET(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Get Smart Campaigns by Lead Id.
     *
     * @covers ::getSmartCampaignMembershipUsingGET
     */
    public function testGetSmartCampaignMembershipUsingGET(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Merge Leads.
     *
     * @covers ::mergeLeadsUsingPOST
     */
    public function testMergeLeadsUsingPOST(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Push Lead to Marketo.
     *
     * @covers ::pushToMarketoUsingPOST
     */
    public function testPushToMarketoUsingPOST(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Submit Form.
     *
     * @covers ::submitFormUsingPOST
     */
    public function testSubmitFormUsingPOST(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Sync Leads.
     *
     * @covers ::syncLeadUsingPOST
     */
    public function testSyncLeadUsingPOST(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Update Lead Field.
     *
     * @covers ::updateLeadFieldUsingPOST
     */
    public function testUpdateLeadFieldUsingPOST(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Update Lead Partition.
     *
     * @covers ::updatePartitionsUsingPOST
     */
    public function testUpdatePartitionsUsingPOST(): void
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
